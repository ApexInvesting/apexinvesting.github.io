<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MetaStock.DataAPI</name>
    </assembly>
    <members>
        <member name="T:MetaStock.DataAPI.ChainUpdateType">
            <summary>
            The type of chain update
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.ChainUpdateType.Add">
            <summary>
            Chain item was added.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.ChainUpdateType.Update">
            <summary>
            Chain item was updated.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.ChainUpdateType.Remove">
            <summary>
            Chain item was removed and set to empty string.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.IChainDataLoadEventArgs">
            <summary>
            Provides data for the <see cref="E:MetaStock.DataAPI.IChainSubscription.DataLoaded"/> event.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IChainDataLoadEventArgs.Data">
            <summary>
            Gets the data.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IChainDataLoadEventArgs.UpdateType">
            <summary>
            Gets the type of update.
            </summary>
            <value>
            The type of the update.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.ChainDataLoadEventArgs">
            <summary>
            Provides data for the <see cref="E:MetaStock.DataAPI.IChainSubscription.DataLoaded"/> event.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.ChainDataLoadEventArgs.Data">
            <summary>
            Gets the data.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ChainDataLoadEventArgs.UpdateType">
            <summary>
            Gets the type of update.
            </summary>
            <value>
            The type of the update.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.IChainItem">
            <summary>
            Represents an item in an instrument chain.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IChainItem.Symbol">
            <summary>
            Gets the symbol.
            </summary>
            <value>
            The symbol.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IChainItem.Index">
            <summary>
            Gets the index of this item in the chain.
            </summary>
            <value>
            The index.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.ChainItem">
            <summary>
            Represents an item in an instrument chain.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.ChainItem.Symbol">
            <summary>
            Gets the symbol.
            </summary>
            <value>
            The symbol.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ChainItem.Index">
            <summary>
            Gets the index of this item in the chain.
            </summary>
            <value>
            The index.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.IChainItemCollection">
            <summary>
            A collection of ChainItems
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.IChainItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.IChainItemCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IChainItemCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:MetaStock.DataAPI.IChainItem"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:MetaStock.DataAPI.IChainItem"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="T:MetaStock.DataAPI.ChainItemCollection">
            <summary>
            A collection of ChainItems
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.ReadOnlyCollection`1">
            <summary>
            Provides a base implementation that exposes a read-only collection
            </summary>
            <typeparam name="TItem">The type to store in the collection.</typeparam>            
        </member>
        <member name="M:MetaStock.DataAPI.ReadOnlyCollection`1.#ctor(`0[])">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.ReadOnlyCollection`1"/> class.
            </summary>
            <param name="itemArray">The item array.</param>
        </member>
        <member name="M:MetaStock.DataAPI.ReadOnlyCollection`1.IndexOf(`0)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1" />.</param>
            <returns>
            The index of <paramref name="item" /> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.ReadOnlyCollection`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:MetaStock.DataAPI.ReadOnlyCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:MetaStock.DataAPI.ReadOnlyCollection`1.Add(`0)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException"><see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:MetaStock.DataAPI.ReadOnlyCollection`1.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:MetaStock.DataAPI.ReadOnlyCollection`1.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an
            <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">
            The one-dimensional System.Array that is the destination of the elements
            copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The System.Array must
            have zero-based indexing.
            </param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:MetaStock.DataAPI.ReadOnlyCollection`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:MetaStock.DataAPI.ReadOnlyCollection`1.System#Collections#Generic#IEnumerable{TItem}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.ReadOnlyCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.IList"/>.
            </summary>
            <param name="value">The object to add to the <see cref="T:System.Collections.IList"/>.</param>
            <returns>
            The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection,
            </returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:MetaStock.DataAPI.ReadOnlyCollection`1.System#Collections#IList#Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:MetaStock.DataAPI.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.
            </summary>
            <param name="value">The object to locate in the <see cref="T:System.Collections.IList" />.</param>
            <returns>
            true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, false.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.
            </summary>
            <param name="value">The object to locate in the <see cref="T:System.Collections.IList" />.</param>
            <returns>
            The index of <paramref name="value" /> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.IList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/> should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:System.Collections.IList"/>.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:MetaStock.DataAPI.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:System.Collections.IList"/>.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:MetaStock.DataAPI.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:MetaStock.DataAPI.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
        </member>
        <member name="P:MetaStock.DataAPI.ReadOnlyCollection`1.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The element at the specified index.</returns>
            <exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="P:MetaStock.DataAPI.ReadOnlyCollection`1.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
              </returns>
        </member>
        <member name="P:MetaStock.DataAPI.ReadOnlyCollection`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.
              </returns>
        </member>
        <member name="P:MetaStock.DataAPI.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.
            </summary>
            <returns>true if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, false.</returns>
        </member>
        <member name="P:MetaStock.DataAPI.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.
              </returns>
        </member>
        <member name="P:MetaStock.DataAPI.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="P:MetaStock.DataAPI.ReadOnlyCollection`1.System#Collections#ICollection#Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
              </returns>
        </member>
        <member name="P:MetaStock.DataAPI.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).
            </summary>
            <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.</returns>
        </member>
        <member name="P:MetaStock.DataAPI.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</returns>
        </member>
        <member name="T:MetaStock.DataAPI.IChainRequest">
            <summary>
            Represent the request parameters for a chain request.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IChainRequest.Symbol">
            <summary>
            Gets or sets the chain request symbol.
            </summary>
            <value>
            The chain request symbol.
            </value>
            <remarks>
            A chain symbol starts with 0# such as "0#.DJI".
            </remarks>
        </member>
        <member name="T:MetaStock.DataAPI.ChainRequest">
            <summary>
            Represent the request parameters for a chain request.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.COM.ObjectSafety">
            <summary>
            Standard IObjectSafety interface.
            Provides methods to get and set safety options.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.COM.IObjectSafety">
            <summary>
            Standard IObjectSafety interface.
            Provides methods to get and set safety options.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.COM.IObjectSafety.GetInterfaceSafetyOptions(System.Guid@,System.Int32@,System.Int32@)">
            <summary>
            Gets the safety options supported by an object and the safety options that are currently set for that object.
            </summary>
            <param name="riid">An interface identifier for a given object.</param>
            <param name="pdwSupportedOptions">Receives the address of a DWORD representing all the options supported for the interface identified by riid.</param>
            <param name="pdwEnabledOptions">Receives the address of a DWORD representing all the options currently enabled for the interface identified by riid.</param>        
            <returns>S_OK if the object is safe for loading. E_NOTINTERFACE if the riid parameter specifies and interface that is unknown to the object.</returns>
        </member>
        <member name="M:MetaStock.DataAPI.COM.IObjectSafety.SetInterfaceSafetyOptions(System.Guid@,System.Int32,System.Int32)">
            <summary>
            Returns whether an object is safe for initialization or scripting, as specified.
            </summary>
            <param name="riid">An iInterface identifier for the object to be made safe.</param>
            <param name="dwOptionSetMask">A mask representing the options to be validated.</param>
            <param name="dwEnabledOptions"> A DWORD representing all the options currently enabled for the interface identified by riid.</param>  
            <returns>
            S_OK if the object is safe for loading. E_NOINTERFACE if the riid parameter specifies an interface that is unknown to the object.
            E_FAIL if the dwOptionSetMask parameter specifies an option that is not supported by the object.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.COM.ObjectSafety.GetInterfaceSafetyOptions(System.Guid@,System.Int32@,System.Int32@)">
            <summary>
            Gets the safety options supported by an object and the safety options that are currently set for that object.
            </summary>
            <param name="riid">An interface identifier for a given object.</param>
            <param name="pdwSupportedOptions">Receives the address of a DWORD representing all the options supported for the interface identified by riid.</param>
            <param name="pdwEnabledOptions">Receives the address of a DWORD representing all the options currently enabled for the interface identified by riid.</param>
            <returns>
            S_OK if the object is safe for loading. E_NOTINTERFACE if the riid parameter specifies and interface that is unknown to the object.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.COM.ObjectSafety.SetInterfaceSafetyOptions(System.Guid@,System.Int32,System.Int32)">
            <summary>
            Returns whether an object is safe for initialization or scripting, as specified.
            </summary>
            <param name="riid">An iInterface identifier for the object to be made safe.</param>
            <param name="dwOptionSetMask">A mask representing the options to be validated.</param>
            <param name="dwEnabledOptions">A DWORD representing all the options currently enabled for the interface identified by riid.</param>
            <returns>
            S_OK if the object is safe for loading. E_NOINTERFACE if the riid parameter specifies an interface that is unknown to the object.
            E_FAIL if the dwOptionSetMask parameter specifies an option that is not supported by the object.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.ChainRequest.Symbol">
            <summary>
            Gets or sets the chain request symbol.
            </summary>
            <value>
            The chain request symbol.
            </value>
            <remarks>
            A chain symbol starts with 0# such as "0#.DJI".
            </remarks>
        </member>
        <member name="T:MetaStock.DataAPI.ChainDataLoadEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:MetaStock.DataAPI.IChainSubscription.DataLoaded"/> event.
            </summary>
            <param name="sender">The <see cref="T:MetaStock.DataAPI.IChainSubscription"/> object that is raising the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:MetaStock.DataAPI.IChainSubscription">
            <summary>
            Subscribes to chain data and raises events when chain available or has updated.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.IChainSubscription.Subscribe(MetaStock.DataAPI.IChainRequest)">
            <summary>
            Subscribes to quote data using the specified request.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:MetaStock.DataAPI.IChainSubscription.Close">
            <summary>
            Closes the subscription.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.IChainSubscription.StateChanged">
            <summary>
            Occurs when the subscription state has changed.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.IChainSubscription.DataLoaded">
            <summary>
            Occurs when data is loaded or updated.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.IChainSubscription.DataStatusChanged">
            <summary>
            Occurs when data status has changed.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.QoSDataLoadEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:MetaStock.DataAPI.IQoSSubscription.DataLoaded"/> event.
            </summary>
            <param name="sender">The <see cref="T:MetaStock.DataAPI.IQoSSubscription"/> object that is raising the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:MetaStock.DataAPI.IQoSSubscription">
            <summary>
            Subscribes to QoS data.
            </summary>    
        </member>
        <member name="M:MetaStock.DataAPI.IQoSSubscription.Subscribe(MetaStock.DataAPI.IQoSRequest)">
            <summary>
            Subscribes to QoS using the specified request.
            </summary>        
        </member>
        <member name="M:MetaStock.DataAPI.IQoSSubscription.Close">
            <summary>
            Closes the subscription.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.IQoSSubscription.StateChanged">
            <summary>
            Occurs when the subscription state has changed.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.IQoSSubscription.DataLoaded">
            <summary>
            Occurs when data is loaded or updated.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.IOptionExpiryDateDataLoadEventArgs">
            <summary>
            Provides data for the option expiry date data changed event.
            </summary>                           
        </member>
        <member name="P:MetaStock.DataAPI.IOptionExpiryDateDataLoadEventArgs.Data">
            <summary>
            Gets the current option expiry date collection.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.OptionExpiryDateDataLoadEventArgs">
            <summary>
            Provides data for the option expiry date data changed event.
            </summary>     
        </member>
        <member name="P:MetaStock.DataAPI.OptionExpiryDateDataLoadEventArgs.Data">
            <summary>
            Gets the current option expiry date collection.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.IOptionExpiryDateItem">
            <summary>
            Represents an option expiry date and the number of options that expire on that date.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IOptionExpiryDateItem.ExpiryDate">
            <summary>
            Gets the expiry date.
            </summary>
            <value>
            The expiry date.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IOptionExpiryDateItem.Count">
            <summary>
            Gets the count of options that expire on <see cref="P:MetaStock.DataAPI.IOptionExpiryDateItem.ExpiryDate"/>
            </summary>
            <value>
            The option count.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.OptionExpiryDateItem">
            <summary>
            Represents an option expiry date and the number of options that expire on that date.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.OptionExpiryDateItem.#ctor(System.DateTime,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.OptionExpiryDateItem"/> class.
            </summary>
            <param name="expiryDate">The expiry date.</param>
            <param name="count">The count.</param>
        </member>
        <member name="P:MetaStock.DataAPI.OptionExpiryDateItem.ExpiryDate">
            <summary>
            Gets the expiry date.
            </summary>
            <value>
            The expiry date.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.OptionExpiryDateItem.Count">
            <summary>
            Gets the count of options that expire on <see cref="P:MetaStock.DataAPI.OptionExpiryDateItem.ExpiryDate"/>
            </summary>
            <value>
            The option count.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.OptionExpiryDateDataLoadEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:MetaStock.DataAPI.IOptionExpiryDateSubscription.DataLoaded"/> event.
            </summary>
            <param name="sender">The <see cref="T:MetaStock.DataAPI.IOptionExpiryDateSubscription"/> object that is raising the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:MetaStock.DataAPI.IOptionExpiryDateSubscription">
            <summary>
            Subscribes to option expiry date data.
            </summary>    
        </member>
        <member name="M:MetaStock.DataAPI.IOptionExpiryDateSubscription.Subscribe(MetaStock.DataAPI.IOptionExpiryDateRequest)">
            <summary>
            Subscribes to option expiry date list using the specified request.
            </summary>        
        </member>
        <member name="M:MetaStock.DataAPI.IOptionExpiryDateSubscription.Close">
            <summary>
            Closes the subscription.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.IOptionExpiryDateSubscription.StateChanged">
            <summary>
            Occurs when the subscription state has changed.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.IOptionExpiryDateSubscription.DataLoaded">
            <summary>
            Occurs when data is loaded or updated.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.IOptionExpiryDateCollection">
            <summary>
            Represents a collection of <see cref="T:MetaStock.DataAPI.IOptionExpiryDateItem"/> values.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.IOptionExpiryDateCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.IOptionExpiryDateCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IOptionExpiryDateCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:MetaStock.DataAPI.IOptionExpiryDateItem"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:MetaStock.DataAPI.IOptionExpiryDateItem"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="T:MetaStock.DataAPI.OptionExpiryDateCollection">
            <summary>
            Represents a collection of <see cref="T:MetaStock.DataAPI.IOptionExpiryDateItem"/> values.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.OptionExpiryDateCollection.#ctor(MetaStock.DataAPI.IOptionExpiryDateItem[])">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.OptionExpiryDateCollection"/> class.
            </summary>
            <param name="items">The items to put in the collection.</param>
        </member>
        <member name="T:MetaStock.DataAPI.IOptionExpiryDateRequest">
            <summary>
            Request parameters for requesting a list of option expiry dates.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.IOptionExpiryDateRequest.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.IOptionExpiryDateRequest.Symbol">
            <summary>
            Gets or sets the symbol.
            </summary>
            <value>
            The symbol.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IOptionExpiryDateRequest.RequestContext">
            <summary>
            Gets or sets the request context.
            </summary>
            <value>
            The request context.
            </value>
            <remarks>
            A <see cref="T:MetaStock.DataAPI.OptionListRequestContext"/> object should be created once and set on each request when making a sequence of requests
            to retrieve option list data. This context will store session information that will ensure that each request in the sequence is directed
            to the same machine behind the load balancer.
            </remarks>
        </member>
        <member name="T:MetaStock.DataAPI.OptionExpiryDateRequest">
            <summary>
            Request parameters for requesting a list of option expiry dates.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.OptionExpiryDateRequest.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.OptionExpiryDateRequest.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.OptionExpiryDateRequest.Symbol">
            <summary>
            Gets or sets the symbol.
            </summary>
            <value>
            The symbol.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.OptionExpiryDateRequest.RequestContext">
            <summary>
            Gets or sets the request context.
            </summary>
            <value>
            The request context.
            </value>
            <remarks>
            A <see cref="T:MetaStock.DataAPI.OptionListRequestContext"/> object should be created once and set on each request when making a sequence of requests
            to retrieve option list data. This context will store session information that will ensure that each request in the sequence is directed
            to the same machine behind the load balancer.
            </remarks>        
        </member>
        <member name="T:MetaStock.DataAPI.COM.IChainSubscriptionEvents">
            <summary>
            Represents a COM event source interface for handling chain subscription events.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.COM.IChainSubscriptionEvents.StateChanged(System.Object,MetaStock.DataAPI.ISubscriptionStateChangedEventArgs)">
            <summary>
            Called when the subscription state has changed.
            </summary>
            <param name="sender">The <see cref="T:MetaStock.DataAPI.IChainSubscription"/> object that is raising the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:MetaStock.DataAPI.COM.IChainSubscriptionEvents.DataLoaded(System.Object,MetaStock.DataAPI.IChainDataLoadEventArgs)">
            <summary>
            Called when data is loaded or updated.
            </summary>
            <param name="sender">The <see cref="T:MetaStock.DataAPI.IChainSubscription"/> object that is raising the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:MetaStock.DataAPI.COM.IChainSubscriptionEvents.DataStatusChanged(System.Object,MetaStock.DataAPI.IDataStatusChangedEventArgs)">
            <summary>
            Called when the subscription data status has changed.
            </summary>
            <param name="sender">The <see cref="T:MetaStock.DataAPI.IChainSubscription"/> object that is raising the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:MetaStock.DataAPI.COM.ChainSubscription">
            <summary>
            Subscribes to chain data and raises events when chain available or has updated.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.COM.ChainSubscription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.COM.ChainSubscription"/> class.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.COM.ChainSubscription.Subscribe(MetaStock.DataAPI.IChainRequest)">
            <summary>
            Subscribes to quote data using the specified request.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:MetaStock.DataAPI.COM.ChainSubscription.Close">
            <summary>
            Closes the subscription.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.COM.ChainSubscription.StateChanged">
            <summary>
            Occurs when the subscription state has changed.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.COM.ChainSubscription.DataLoaded">
            <summary>
            Occurs when data is loaded or updated.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.COM.ChainSubscription.DataStatusChanged">
            <summary>
            Occurs when data status has changed.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.COM.IFeedSubscriptionEvents">
            <summary>
            Represents a COM event source interface for handling feed subscription events.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.COM.IFeedSubscriptionEvents.SubscriptionStateChanged(System.Object,MetaStock.DataAPI.ISubscriptionStateChangedEventArgs)">
            <summary>
            Occurs when the subscription state has changed.
            </summary>
            <param name="sender">The <see cref="T:MetaStock.DataAPI.IFeedSubscription"/> object that is raising the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:MetaStock.DataAPI.COM.IFeedSubscriptionEvents.FeedDataLoaded(System.Object,MetaStock.DataAPI.IFeedDataLoadEventArgs)">
            <summary>
            Occurs when the feed data is loaded or updated.
            </summary>
            <param name="sender">The <see cref="T:MetaStock.DataAPI.IFeedSubscription"/> object that is raising the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:MetaStock.DataAPI.COM.IFeedSubscriptionEvents.DataStatusChanged(System.Object,MetaStock.DataAPI.IDataStatusChangedEventArgs)">
            <summary>
            Called when the subscription data status has changed.
            </summary>
            <param name="sender">The <see cref="T:MetaStock.DataAPI.IFeedSubscription"/> object that is raising the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:MetaStock.DataAPI.COM.FeedSubscription">
            <summary>
            A subscription to feed information.
            </summary>
            <remarks>
            This class is publicly creatable to support COM clients that require a creatable object
            in order to connect an event sink. Other clients can obtain a feed subscription through 
            the <see cref="P:MetaStock.DataAPI.ITimeSeriesDataManager.SubscriptionService"/> interface.
            </remarks>
        </member>
        <member name="T:MetaStock.DataAPI.IFeedSubscription">
            <summary>
            Subscribes to feed information. And raises events when feed data is available or has changed.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.IFeedSubscription.Subscribe">
            <summary>
            Initiates the subscription. <see cref="E:MetaStock.DataAPI.IFeedSubscription.StateChanged"/> and <see cref="E:MetaStock.DataAPI.IFeedSubscription.DataLoaded"/>
            events will fire when the subscription state changes and feed data is loaded or changes.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.IFeedSubscription.Close">
            <summary>
            Closes the subscription.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.IFeedSubscription.StateChanged">
            <summary>
            Occurs when the subscription state has changed.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.IFeedSubscription.DataLoaded">
            <summary>
            Occurs when the feed data is loaded or updated.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.IFeedSubscription.DataStatusChanged">
            <summary>
            Occurs when data status has changed.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.COM.FeedSubscription.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.COM.FeedSubscription.Subscribe">
            <summary>
            Initiates the subscription. <see cref="E:MetaStock.DataAPI.COM.FeedSubscription.StateChanged"/> and <see cref="E:MetaStock.DataAPI.COM.FeedSubscription.DataLoaded"/>
            events will fire when the subscription state changes and feed data is loaded or changes.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.COM.FeedSubscription.Close">
            <summary>
            Closes the subscription.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.COM.FeedSubscription.StateChanged">
            <summary>
            Occurs when the subscription state has changed.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.COM.FeedSubscription.DataLoaded">
            <summary>
            Occurs when the feed data is loaded or updated.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.COM.FeedSubscription.DataStatusChanged">
            <summary>
            Occurs when data status has changed.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.COM.IInstrumentSubscriptionEvents">
            <summary>
            Represents a COM event source interface for handling instrument subscription events.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.COM.IInstrumentSubscriptionEvents.StateChanged(System.Object,MetaStock.DataAPI.ISubscriptionStateChangedEventArgs)">
            <summary>
            Called when the subscription state has changed.
            </summary>
            <param name="sender">The <see cref="T:MetaStock.DataAPI.IInstrumentSubscription"/> object that is raising the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:MetaStock.DataAPI.COM.IInstrumentSubscriptionEvents.DataLoaded(System.Object,MetaStock.DataAPI.IInstrumentDataLoadEventArgs)">
            <summary>
            Called when data is loaded or updated.
            </summary>
            <param name="sender">The <see cref="T:MetaStock.DataAPI.IInstrumentSubscription"/> object that is raising the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:MetaStock.DataAPI.COM.IInstrumentSubscriptionEvents.DataStatusChanged(System.Object,MetaStock.DataAPI.IDataStatusChangedEventArgs)">
            <summary>
            Called when the subscription data status has changed.
            </summary>
            <param name="sender">The <see cref="T:MetaStock.DataAPI.IInstrumentSubscription"/> object that is raising the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:MetaStock.DataAPI.COM.InstrumentSubscription">
            <summary>
            Subscribes to instrument metadata and raises events when instrument metadata is available or has changed.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.IInstrumentSubscription">
            <summary>
            Subscribes to instrument metadata and raises events when instrument metadata is available or has changed.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.IInstrumentSubscription.Subscribe(MetaStock.DataAPI.IInstrumentRequest)">
            <summary>
            Subscribes to instrument metadata using the specified request.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:MetaStock.DataAPI.IInstrumentSubscription.Close">
            <summary>
            Closes the subscription.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.IInstrumentSubscription.StateChanged">
            <summary>
            Occurs when the subscription state has changed.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.IInstrumentSubscription.DataLoaded">
            <summary>
            Occurs when data is loaded or updated.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.IInstrumentSubscription.DataStatusChanged">
            <summary>
            Occurs when data status has changed.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.COM.InstrumentSubscription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.COM.InstrumentSubscription"/> class.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.COM.InstrumentSubscription.Subscribe(MetaStock.DataAPI.IInstrumentRequest)">
            <summary>
            Subscribes to instrument metadata using the specified request.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:MetaStock.DataAPI.COM.InstrumentSubscription.Close">
            <summary>
            Closes the subscription.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.COM.InstrumentSubscription.StateChanged">
            <summary>
            Occurs when the subscription state has changed.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.COM.InstrumentSubscription.DataLoaded">
            <summary>
            Occurs when data is loaded or updated.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.COM.InstrumentSubscription.DataStatusChanged">
            <summary>
            Occurs when data status has changed.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.COM.IQuoteSubscriptionEvents">
            <summary>
            Represents a COM event source interface for handling quote subscription events.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.COM.IQuoteSubscriptionEvents.StateChanged(System.Object,MetaStock.DataAPI.ISubscriptionStateChangedEventArgs)">
            <summary>
            Called when the subscription state has changed.
            </summary>
            <param name="sender">The <see cref="T:MetaStock.DataAPI.IQuoteSubscription"/> object that is raising the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:MetaStock.DataAPI.COM.IQuoteSubscriptionEvents.DataLoaded(System.Object,MetaStock.DataAPI.IQuoteDataLoadEventArgs)">
            <summary>
            Called when data is loaded or updated.
            </summary>
            <param name="sender">The <see cref="T:MetaStock.DataAPI.IQuoteSubscription"/> object that is raising the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:MetaStock.DataAPI.COM.IQuoteSubscriptionEvents.DataStatusChanged(System.Object,MetaStock.DataAPI.IDataStatusChangedEventArgs)">
            <summary>
            Called when the subscription data status has changed.
            </summary>
            <param name="sender">The <see cref="T:MetaStock.DataAPI.IQuoteSubscription"/> object that is raising the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:MetaStock.DataAPI.COM.QuoteSubscription">
            <summary>
            Subscribes to real-time quote data and raises events when quote available or has updated.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.IQuoteSubscription">
            <summary>
            Subscribes to real-time quote data and raises events when quote available or has updated.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.IQuoteSubscription.Subscribe(MetaStock.DataAPI.IQuoteRequest)">
            <summary>
            Subscribes to quote data using the specified request.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:MetaStock.DataAPI.IQuoteSubscription.Close">
            <summary>
            Closes the subscription.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.IQuoteSubscription.StateChanged">
            <summary>
            Occurs when the subscription state has changed.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.IQuoteSubscription.DataLoaded">
            <summary>
            Occurs when data is loaded or updated.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.IQuoteSubscription.DataStatusChanged">
            <summary>
            Occurs when data status has changed.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.COM.QuoteSubscription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.COM.QuoteSubscription"/> class.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.COM.QuoteSubscription.Subscribe(MetaStock.DataAPI.IQuoteRequest)">
            <summary>
            Subscribes to quote data using the specified request.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:MetaStock.DataAPI.COM.QuoteSubscription.Close">
            <summary>
            Closes the subscription.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.COM.QuoteSubscription.StateChanged">
            <summary>
            Occurs when the subscription state has changed.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.COM.QuoteSubscription.DataLoaded">
            <summary>
            Occurs when data is loaded or updated.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.COM.QuoteSubscription.DataStatusChanged">
            <summary>
            Occurs when data status has changed.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.COM.SnapshotService">
            <summary>
            Class that provides access to snapshot data rather than streaming updating data.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.ISnapshotService">
            <summary>
            Interface that provides access to snapshot data rather than streaming updating data.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.GetQuote(MetaStock.DataAPI.IQuoteRequest)">
            <summary>
            Gets a real-time quote for the requested fields.
            </summary>
            <param name="request">The request parameters.</param>
            <returns>A <see cref="T:MetaStock.DataAPI.IQuoteItemDictionary"/> that contains the requested data.</returns>
            <exception cref="T:System.TimeoutException">The data could not be retrieved within the time allotted.</exception>
            <exception cref="T:MetaStock.DataAPI.DataAccessException">An error occurred while processing the request.</exception>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.BeginGetQuote(MetaStock.DataAPI.IQuoteRequest,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get real-time quote information.
            </summary>
            <param name="request">The request parameters.</param>
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.</returns>
            <remarks>
            The BeginGetQuote method starts an asynchronous request for a real-time quote response. 
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.ISnapshotService.EndGetQuote(System.IAsyncResult)"/> method to return the actual <see cref="T:MetaStock.DataAPI.IQuoteItemDictionary"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.EndGetQuote(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request for a real-time quote.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>&gt;A <see cref="T:MetaStock.DataAPI.IQuoteItemDictionary"/> that contains the requested data.</returns>
            <exception cref="T:System.TimeoutException">The data could not be retrieved within the time allotted.</exception>
            <exception cref="T:MetaStock.DataAPI.DataAccessException">An error occurred while processing the request.</exception>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.GetInstrument(MetaStock.DataAPI.IInstrumentRequest)">
            <summary>
            Gets a instrument metadata for the requested symbol.
            </summary>
            <param name="request">The request parameters.</param>
            <returns>A <see cref="T:MetaStock.DataAPI.IInstrument"/> that contains the instrument metadata.</returns>
            <exception cref="T:System.TimeoutException">The data could not be retrieved within the time allotted.</exception>
            <exception cref="T:MetaStock.DataAPI.DataAccessException">An error occurred while processing the request.</exception>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.BeginGetInstrument(MetaStock.DataAPI.IInstrumentRequest,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get instrument metadata.
            </summary>
            <param name="request">The request parameters.</param>
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.</returns>
            <remarks>
            The BeginGetInstrument method starts an asynchronous request for instrument metadata. 
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.ISnapshotService.EndGetInstrument(System.IAsyncResult)"/> method to return the actual <see cref="T:MetaStock.DataAPI.IInstrument"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.EndGetInstrument(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request for instrument metadata.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>&gt;A <see cref="T:MetaStock.DataAPI.IInstrument"/> that contains the requested data.</returns>
            <exception cref="T:System.TimeoutException">The data could not be retrieved within the time allotted.</exception>
            <exception cref="T:MetaStock.DataAPI.DataAccessException">An error occurred while processing the request.</exception>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.GetTimeSeries(MetaStock.DataAPI.ITimeSeriesRequest)">
            <summary>
            Gets time series data.
            </summary>
            <param name="request">The request parameters.</param>
            <returns>A <see cref="T:MetaStock.DataAPI.ITimeSeriesChunk[]"/> that contains the instrument metadata.</returns>
            <exception cref="T:System.TimeoutException">The data could not be retrieved within the time allotted.</exception>
            <exception cref="T:MetaStock.DataAPI.DataAccessException">An error occurred while processing the request.</exception>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.BeginGetTimeSeries(MetaStock.DataAPI.ITimeSeriesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get time series data.
            </summary>
            <param name="request">The request parameters.</param>
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.</returns>
            <remarks>
            The BeginGetTimeSeries method starts an asynchronous request for instrument metadata. 
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.ISnapshotService.EndGetTimeSeries(System.IAsyncResult)"/> method to return the actual <see cref="T:MetaStock.DataAPI.ITimeSeriesChunk[]"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.EndGetTimeSeries(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request for time series data.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>&gt;A <see cref="T:MetaStock.DataAPI.ITimeSeriesChunk[]"/> that contains the requested data.</returns>
            <exception cref="T:System.TimeoutException">The data could not be retrieved within the time allotted.</exception>
            <exception cref="T:MetaStock.DataAPI.DataAccessException">An error occurred while processing the request.</exception>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.GetChain(MetaStock.DataAPI.IChainRequest)">
            <summary>
            Gets an instrument chain.
            </summary>
            <param name="request">The request parameters.</param>
            <returns>A <see cref="T:MetaStock.DataAPI.IChainItemCollection"/> that contains the chain symbols.</returns>
            <exception cref="T:System.TimeoutException">The data could not be retrieved within the time allotted.</exception>
            <exception cref="T:MetaStock.DataAPI.DataAccessException">An error occurred while processing the request.</exception>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.BeginGetChain(MetaStock.DataAPI.IChainRequest,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get an instrument chain.
            </summary>
            <param name="request">The request parameters.</param>
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.</returns>
            <remarks>
            The BeginGetChain method starts an asynchronous request for an instrument chain.
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.ISnapshotService.EndGetChain(System.IAsyncResult)"/> method to return the actual <see cref="T:MetaStock.DataAPI.IChainItemCollection"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.EndGetChain(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request for an instrument chain.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>&gt;A <see cref="T:MetaStock.DataAPI.IChainItemCollection"/> that contains the requested data.</returns>
            <exception cref="T:System.TimeoutException">The data could not be retrieved within the time allotted.</exception>
            <exception cref="T:MetaStock.DataAPI.DataAccessException">An error occurred while processing the request.</exception>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.GetCurrencies">
            <summary>
            Gets a collection of currency information.
            </summary>        
            <returns>A <see cref="T:MetaStock.DataAPI.ICurrencyCollection"/> that contains the currency information.</returns>
            <exception cref="T:System.TimeoutException">The data could not be retrieved within the time allotted.</exception>
            <exception cref="T:MetaStock.DataAPI.DataAccessException">An error occurred while processing the request.</exception>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.BeginGetCurrencies(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get currency information.
            </summary>        
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.</returns>
            <remarks>
            The BeginGetCurrencies method starts an asynchronous request for currency information.
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.ISnapshotService.EndGetCurrencies(System.IAsyncResult)"/> method to return the actual <see cref="T:MetaStock.DataAPI.ICurrencyCollection"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.EndGetCurrencies(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request for currency information.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>&gt;A <see cref="T:MetaStock.DataAPI.ICurrencyCollection"/> that contains the requested data.</returns>
            <exception cref="T:System.TimeoutException">The data could not be retrieved within the time allotted.</exception>
            <exception cref="T:MetaStock.DataAPI.DataAccessException">An error occurred while processing the request.</exception>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.GetUnits">
            <summary>
            Gets a collection of unit information.
            </summary>        
            <returns>A <see cref="T:MetaStock.DataAPI.IUnitCollection"/> that contains the unit information.</returns>
            <exception cref="T:System.TimeoutException">The data could not be retrieved within the time allotted.</exception>
            <exception cref="T:MetaStock.DataAPI.DataAccessException">An error occurred while processing the request.</exception>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.BeginGetUnits(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get unit information.
            </summary>        
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.</returns>
            <remarks>
            The BeginGetUnits method starts an asynchronous request for unit information.
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.ISnapshotService.EndGetUnits(System.IAsyncResult)"/> method to return the actual <see cref="T:MetaStock.DataAPI.IUnitCollection"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.EndGetUnits(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request for unit information.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>&gt;A <see cref="T:MetaStock.DataAPI.IUnitCollection"/> that contains the requested data.</returns>
            <exception cref="T:System.TimeoutException">The data could not be retrieved within the time allotted.</exception>
            <exception cref="T:MetaStock.DataAPI.DataAccessException">An error occurred while processing the request.</exception>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.GetTimeZones">
            <summary>
            Gets a collection of time zone information.
            </summary>        
            <returns>A <see cref="T:MetaStock.DataAPI.ITimeZoneCollection"/> that contains the time zone information.</returns>
            <exception cref="T:System.TimeoutException">The data could not be retrieved within the time allotted.</exception>
            <exception cref="T:MetaStock.DataAPI.DataAccessException">An error occurred while processing the request.</exception>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.BeginGetTimeZones(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get time zone information.
            </summary>        
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.</returns>
            <remarks>
            The BeginGetTimeZones method starts an asynchronous request for time zone information.
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.ISnapshotService.EndGetTimeZones(System.IAsyncResult)"/> method to return the actual <see cref="T:MetaStock.DataAPI.ITimeZoneCollection"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.EndGetTimeZones(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request for time zone information.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>&gt;A <see cref="T:MetaStock.DataAPI.ITimeZoneCollection"/> that contains the requested data.</returns>
            <exception cref="T:System.TimeoutException">The data could not be retrieved within the time allotted.</exception>
            <exception cref="T:MetaStock.DataAPI.DataAccessException">An error occurred while processing the request.</exception>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.GetExchanges">
            <summary>
            Gets a collection of exchange information.
            </summary>        
            <returns>A <see cref="T:MetaStock.DataAPI.IExchangeCollection"/> that contains the exchange information.</returns>
            <exception cref="T:System.TimeoutException">The data could not be retrieved within the time allotted.</exception>
            <exception cref="T:MetaStock.DataAPI.DataAccessException">An error occurred while processing the request.</exception>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.BeginGetExchanges(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get exchange information.
            </summary>        
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.</returns>
            <remarks>
            The BeginGetExchanges method starts an asynchronous request for time zone information.
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.ISnapshotService.EndGetExchanges(System.IAsyncResult)"/> method to return the actual <see cref="T:MetaStock.DataAPI.IExchangeCollection"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.EndGetExchanges(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request for exchange information.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>&gt;A <see cref="T:MetaStock.DataAPI.IExchangeCollection"/> that contains the requested data.</returns>
            <exception cref="T:System.TimeoutException">The data could not be retrieved within the time allotted.</exception>
            <exception cref="T:MetaStock.DataAPI.DataAccessException">An error occurred while processing the request.</exception>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.GetOptionList(MetaStock.DataAPI.IOptionListRequest)">
            <summary>
            Gets a list of options for a symbol.
            </summary>
            <param name="request">The request parameters.</param>
            <returns>
            A <see cref="T:MetaStock.DataAPI.IOptionListResponse"/> that contains the option list.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.BeginGetOptionList(MetaStock.DataAPI.IOptionListRequest,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get a list of options for a symbol.
            </summary>
            <param name="request">The request parameters.</param>
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.
            </returns>
            <remarks>
            The BeginGetExchanges method starts an asynchronous request for the option list.
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.ISnapshotService.EndGetOptionList(System.IAsyncResult)"/> method to return the actual <see cref="T:MetaStock.DataAPI.IOptionListResponse"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.EndGetOptionList(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request a list of options for a symbol.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>
            A <see cref="T:MetaStock.DataAPI.IOptionListResponse"/> that contains the requested data.
            </returns>    
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.GetOptionExpiryDates(MetaStock.DataAPI.IOptionExpiryDateRequest)">
            <summary>
            Gets a list of option expiry dates for a symbol.
            </summary>
            <param name="request">The request parameters.</param>
            <returns>
            A <see cref="T:MetaStock.DataAPI.IOptionExpiryDateCollection"/>  that contains the requested data.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.BeginGetOptionExpiryDates(MetaStock.DataAPI.IOptionExpiryDateRequest,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get a list of option expiry dates for a symbol.
            </summary>
            <param name="request">The request parameters.</param>
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.
            </returns>
            <remarks>
            The BeginGetExchanges method starts an asynchronous request for the option expiry date list.
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.ISnapshotService.EndGetOptionList(System.IAsyncResult)"/> method to return the actual <see cref="T:MetaStock.DataAPI.IOptionExpiryDateCollection"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.EndGetOptionExpiryDates(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request a list of option expiry dates for a symbol.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>
            A <see cref="T:MetaStock.DataAPI.IOptionListResponse"/> that contains the requested data.
            </returns>    
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.GetQoS(MetaStock.DataAPI.IQoSRequest)">
            <summary>
            Gets quality of service information for the given symbol.
            </summary>
            <param name="request">The request parameters.</param>
            <returns>
            A <see cref="T:MetaStock.DataAPI.IQoSResponse"/> that contains the requested data.
            </returns>
            <exception cref="T:System.TimeoutException">The data could not be retrieved within the time allotted.</exception>
            <exception cref="T:MetaStock.DataAPI.DataAccessException">An error occurred while processing the request.</exception>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.BeginGetQoS(MetaStock.DataAPI.IQoSRequest,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get quality of service information for the given symbol.
            </summary>
            <param name="request">The request parameters.</param>
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.
            </returns>
            <remarks>
            The BeginGetQoS method starts an asynchronous request for the quality of service information.
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.ISnapshotService.EndGetQoS(System.IAsyncResult)"/> method to return the actual <see cref="T:MetaStock.DataAPI.IQoSResponse"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.ISnapshotService.EndGetQoS(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request to get quality of service information for the given symbol.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>
            A <see cref="T:MetaStock.DataAPI.IQoSResponse"/> that contains the requested data.
            </returns>    
            <exception cref="T:System.TimeoutException">The data could not be retrieved within the time allotted.</exception>
            <exception cref="T:MetaStock.DataAPI.DataAccessException">An error occurred while processing the request.</exception>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.GetQuote(MetaStock.DataAPI.IQuoteRequest)">
            <summary>
            Gets a real-time quote for the requested fields.
            </summary>
            <param name="request">The request parameters.</param>
            <returns>
            A <see cref="T:MetaStock.DataAPI.IQuoteItemDictionary"/> that contains the requested data.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.BeginGetQuote(MetaStock.DataAPI.IQuoteRequest,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get real-time quote information.
            </summary>
            <param name="request">The request parameters.</param>
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.
            </returns>
            <remarks>
            The BeginGetQuote method starts an asynchronous request for a real-time quote response.
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.COM.SnapshotService.EndGetQuote(System.IAsyncResult)"/> method to return the actual <see cref="T:MetaStock.DataAPI.IQuoteItemDictionary"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.EndGetQuote(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request for a real-time quote.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>
            &gt;A <see cref="T:MetaStock.DataAPI.IQuoteItemDictionary"/> that contains the requested data.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.GetInstrument(MetaStock.DataAPI.IInstrumentRequest)">
            <summary>
            Gets a instrument metadata for the requested symbol.
            </summary>
            <param name="request">The request parameters.</param>
            <returns>
            A <see cref="T:MetaStock.DataAPI.IInstrument"/> that contains the instrument metadata.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.BeginGetInstrument(MetaStock.DataAPI.IInstrumentRequest,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get instrument metadata.
            </summary>
            <param name="request">The request parameters.</param>
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
            <remarks>
            The BeginGetInstrument method starts an asynchronous request for instrument metadata.
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.COM.SnapshotService.EndGetInstrument(System.IAsyncResult)"/> method to return the actual <see cref="T:MetaStock.DataAPI.IInstrument"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.EndGetInstrument(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request for instrument metadata.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>
            &gt;A <see cref="T:MetaStock.DataAPI.IInstrument"/> that contains the requested data.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.GetTimeSeries(MetaStock.DataAPI.ITimeSeriesRequest)">
            <summary>
            Gets time series data.
            </summary>
            <param name="request">The request parameters.</param>
            <returns>
            A <see cref="T:ITimeSeriesChunk[]"/> that contains the instrument metadata.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.BeginGetTimeSeries(MetaStock.DataAPI.ITimeSeriesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get time series data.
            </summary>
            <param name="request">The request parameters.</param>
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
            <remarks>
            The BeginGetTimeSeries method starts an asynchronous request for instrument metadata.
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.COM.SnapshotService.EndGetTimeSeries(System.IAsyncResult)"/> method to return the actual <see cref="T:ITimeSeriesChunk[]"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.EndGetTimeSeries(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request for time series data.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>
            &gt;A <see cref="T:ITimeSeriesChunk[]"/> that contains the requested data.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.GetChain(MetaStock.DataAPI.IChainRequest)">
            <summary>
            Gets an instrument chain.
            </summary>
            <param name="request">The request parameters.</param>
            <returns>
            A <see cref="T:MetaStock.DataAPI.IChainItemCollection"/> that contains the chain symbols.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.BeginGetChain(MetaStock.DataAPI.IChainRequest,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get an instrument chain.
            </summary>
            <param name="request">The request parameters.</param>
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
            <remarks>
            The BeginGetChain method starts an asynchronous request for an instrument chain.
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.COM.SnapshotService.EndGetChain(System.IAsyncResult)"/> method to return the actual <see cref="T:MetaStock.DataAPI.IChainItemCollection"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.EndGetChain(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request for an instrument chain.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>
            &gt;A <see cref="T:MetaStock.DataAPI.IChainItemCollection"/> that contains the requested data.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.GetCurrencies">
            <summary>
            Gets a collection of currency information.
            </summary>
            <returns>
            A <see cref="T:MetaStock.DataAPI.ICurrencyCollection"/> that contains the currency information.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.BeginGetCurrencies(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get currency information.
            </summary>
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
            <remarks>
            The BeginGetCurrencies method starts an asynchronous request for currency information.
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.COM.SnapshotService.EndGetCurrencies(System.IAsyncResult)"/> method to return the actual <see cref="T:MetaStock.DataAPI.ICurrencyCollection"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.EndGetCurrencies(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request for currency information.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>
            &gt;A <see cref="T:MetaStock.DataAPI.ICurrencyCollection"/> that contains the requested data.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.GetUnits">
            <summary>
            Gets a collection of unit information.
            </summary>
            <returns>
            A <see cref="T:MetaStock.DataAPI.IUnitCollection"/> that contains the unit information.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.BeginGetUnits(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get unit information.
            </summary>
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
            <remarks>
            The BeginGetUnits method starts an asynchronous request for unit information.
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.COM.SnapshotService.EndGetUnits(System.IAsyncResult)"/> method to return the actual <see cref="T:MetaStock.DataAPI.IUnitCollection"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.EndGetUnits(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request for unit information.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>
            &gt;A <see cref="T:MetaStock.DataAPI.IUnitCollection"/> that contains the requested data.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.GetTimeZones">
            <summary>
            Gets a collection of time zone information.
            </summary>
            <returns>
            A <see cref="T:MetaStock.DataAPI.ITimeZoneCollection"/> that contains the time zone information.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.BeginGetTimeZones(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get time zone information.
            </summary>
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
            <remarks>
            The BeginGetTimeZones method starts an asynchronous request for time zone information.
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.COM.SnapshotService.EndGetTimeZones(System.IAsyncResult)"/> method to return the actual <see cref="T:MetaStock.DataAPI.ITimeZoneCollection"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.EndGetTimeZones(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request for time zone information.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>
            &gt;A <see cref="T:MetaStock.DataAPI.ITimeZoneCollection"/> that contains the requested data.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.GetExchanges">
            <summary>
            Gets a collection of exchange information.
            </summary>
            <returns>
            A <see cref="T:MetaStock.DataAPI.IExchangeCollection"/> that contains the exchange information.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.BeginGetExchanges(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get exchange information.
            </summary>
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
            <remarks>
            The BeginGetExchanges method starts an asynchronous request for time zone information.
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.COM.SnapshotService.EndGetExchanges(System.IAsyncResult)"/> method to return the actual <see cref="T:MetaStock.DataAPI.IExchangeCollection"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.EndGetExchanges(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request for exchange information.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>
            &gt;A <see cref="T:MetaStock.DataAPI.IExchangeCollection"/> that contains the requested data.
            </returns>        
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.GetOptionList(MetaStock.DataAPI.IOptionListRequest)">
            <summary>
            Gets a list of options for a symbol.
            </summary>
            <param name="request">The request parameters.</param>
            <returns>
            A <see cref="T:MetaStock.DataAPI.IOptionListResponse"/> that contains the option list.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.BeginGetOptionList(MetaStock.DataAPI.IOptionListRequest,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get a list of options for a symbol.
            </summary>
            <param name="request">The request parameters.</param>
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.
            </returns>
            <remarks>
            The BeginGetExchanges method starts an asynchronous request for the option list.
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.COM.SnapshotService.EndGetOptionList(System.IAsyncResult)"/> method to return the actual <see cref="T:MetaStock.DataAPI.IOptionListResponse"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.EndGetOptionList(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request a list of options for a symbol.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>
            &gt;A <see cref="T:MetaStock.DataAPI.IOptionListResponse"/> that contains the requested data.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.GetOptionExpiryDates(MetaStock.DataAPI.IOptionExpiryDateRequest)">
            <summary>
            Gets the option expiry dates.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.BeginGetOptionExpiryDates(MetaStock.DataAPI.IOptionExpiryDateRequest,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get a list of option expiry dates for a symbol.
            </summary>
            <param name="request">The request parameters.</param>
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.
            </returns>
            <remarks>
            The BeginGetExchanges method starts an asynchronous request for the option expiry date list.
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.COM.SnapshotService.EndGetOptionList(System.IAsyncResult)"/> method to return the actual <see cref="T:MetaStock.DataAPI.IOptionExpiryDateCollection"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.EndGetOptionExpiryDates(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request a list of option expiry dates for a symbol.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>
            A <see cref="T:MetaStock.DataAPI.IOptionListResponse"/> that contains the requested data.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.GetQoS(MetaStock.DataAPI.IQoSRequest)">
            <summary>
            Gets quality of service information for the given symbol.
            </summary>
            <param name="request">The request parameters.</param>
            <returns>
            A <see cref="T:MetaStock.DataAPI.IQoSResponse"/> that contains the requested data.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.BeginGetQoS(MetaStock.DataAPI.IQoSRequest,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get quality of service information for the given symbol.
            </summary>
            <param name="request">The request parameters.</param>
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
            <remarks>
            The BeginGetQoS method starts an asynchronous request for the quality of service information.
            The asynchronous requestCallback method uses the 
            <see cref="M:MetaStock.DataAPI.COM.SnapshotService.EndGetQoS(System.IAsyncResult)"/> method to return the actual 
            <see cref="T:MetaStock.DataAPI.IQoSResponse"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.COM.SnapshotService.EndGetQoS(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request to get quality of service information for the given symbol.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>
            A <see cref="T:MetaStock.DataAPI.IQoSResponse"/> that contains the requested data.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:MetaStock.DataAPI.COM.ITimeSeriesSubscriptionEvents">
            <summary>
            Represents a COM event source interface for handling time series subscription events.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.COM.ITimeSeriesSubscriptionEvents.StateChanged(System.Object,MetaStock.DataAPI.ISubscriptionStateChangedEventArgs)">
            <summary>
            Called when the subscription state has changed.
            </summary>
            <param name="sender">The <see cref="T:MetaStock.DataAPI.ITimeSeriesSubscription"/> object that is raising the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:MetaStock.DataAPI.COM.ITimeSeriesSubscriptionEvents.DataLoaded(System.Object,MetaStock.DataAPI.ITimeSeriesDataLoadEventArgs)">
            <summary>
            Called when data is loaded or updated.
            </summary>
            <param name="sender">The <see cref="T:MetaStock.DataAPI.ITimeSeriesSubscription"/> object that is raising the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:MetaStock.DataAPI.COM.ITimeSeriesSubscriptionEvents.DataStatusChanged(System.Object,MetaStock.DataAPI.IDataStatusChangedEventArgs)">
            <summary>
            Called when the subscription data status has changed.
            </summary>
            <param name="sender">The <see cref="T:MetaStock.DataAPI.ITimeSeriesSubscription"/> object that is raising the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:MetaStock.DataAPI.COM.TimeSeriesSubscription">
            <summary>
            Subscribes to time series data and raises events when data is available or has changed.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.ITimeSeriesSubscription">
            <summary>
            Subscribes to time series data and raises events when data is available or has changed.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.ITimeSeriesSubscription.Subscribe(MetaStock.DataAPI.ITimeSeriesRequest)">
            <summary>
            Subscribes to time series data using the specified request.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:MetaStock.DataAPI.ITimeSeriesSubscription.Close">
            <summary>
            Closes the subscription.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.ITimeSeriesSubscription.StateChanged">
            <summary>
            Occurs when the subscription state has changed.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.ITimeSeriesSubscription.DataLoaded">
            <summary>
            Occurs when data is loaded or updated.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.ITimeSeriesSubscription.DataStatusChanged">
            <summary>
            Occurs when data status has changed.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.COM.TimeSeriesSubscription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.COM.TimeSeriesSubscription"/> class.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.COM.TimeSeriesSubscription.Subscribe(MetaStock.DataAPI.ITimeSeriesRequest)">
            <summary>
            Subscribes to time series data using the specified request.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:MetaStock.DataAPI.COM.TimeSeriesSubscription.Close">
            <summary>
            Closes the subscription.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.COM.TimeSeriesSubscription.StateChanged">
            <summary>
            Occurs when the subscription state has changed.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.COM.TimeSeriesSubscription.DataLoaded">
            <summary>
            Occurs when data is loaded or updated.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.COM.TimeSeriesSubscription.DataStatusChanged">
            <summary>
            Occurs when data status has changed.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.IOptionListDataLoadEventArgs">
            <summary>
            Provides data for the option list changed event
            </summary>    
        </member>
        <member name="P:MetaStock.DataAPI.IOptionListDataLoadEventArgs.Data">
            <summary>
            Gets the current option list collection.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.OptionListDataLoadEventArgs">
            <summary>
            Provides data for the option list changed event
            </summary>    
        </member>
        <member name="P:MetaStock.DataAPI.OptionListDataLoadEventArgs.Data">
            <summary>
            Gets the current option list collection.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.IOptionItem">
            <summary>
            Represents an option.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IOptionItem.Symbol">
            <summary>
            Gets the option symbol.
            </summary>
            <value>
            The option symbol.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IOptionItem.Title">
            <summary>
            Gets a string description of the option.
            </summary>
            <value>
            A string description of the option.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IOptionItem.ExpirationDate">
            <summary>
            Gets the expiration date.
            </summary>
            <value>
            The expiration date.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IOptionItem.StrikePrice">
            <summary>
            Gets the strike price.
            </summary>
            <value>
            The strike price.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IOptionItem.OptionType">
            <summary>
            Gets the type of the option.
            </summary>
            <value>
            The type of the option.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IOptionItem.Periodicity">
            <summary>
            Gets the periodicity.
            </summary>
            <value>
            The periodicity.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.OptionItem">
            <summary>
            Represents an option.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.OptionItem.Symbol">
            <summary>
            Gets the option symbol.
            </summary>
            <value>
            The option symbol.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.OptionItem.Title">
            <summary>
            Gets a string description of the option.
            </summary>
            <value>
            A string description of the option.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.OptionItem.ExpirationDate">
            <summary>
            Gets the expiration date.
            </summary>
            <value>
            The expiration date.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.OptionItem.StrikePrice">
            <summary>
            Gets the strike price.
            </summary>
            <value>
            The strike price.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.OptionItem.OptionType">
            <summary>
            Gets the type of the option.
            </summary>
            <value>
            The type of the option.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.OptionItem.Periodicity">
            <summary>
            Gets the periodicity.
            </summary>
            <value>
            The periodicity.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.IOptionItemCollection">
            <summary>
            Represents a collection of options contracts.
            </summary>    
        </member>
        <member name="M:MetaStock.DataAPI.IOptionItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.IOptionItemCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IOptionItemCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:MetaStock.DataAPI.IOptionItem"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:MetaStock.DataAPI.IOptionItem"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="T:MetaStock.DataAPI.OptionItemCollection">
            <summary>
            Represents a collection of options contracts.
            </summary>     
        </member>
        <member name="T:MetaStock.DataAPI.IOptionListRequest">
            <summary>
            Represents a request for options for the underlying symbol.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.IOptionListRequest.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.IOptionListRequest.Symbol">
            <summary>
            Gets or sets the underlying symbol.
            </summary>
            <value>
            The underlying symbol.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IOptionListRequest.ExpiryStart">
            <summary>
            Gets or sets the expiry start date. 
            Only records that expire on or after this date will be returned.
            </summary>
            <value>
            The expiry start date.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IOptionListRequest.ExpiryEnd">
            <summary>
            Gets or sets the expiry end date. 
            Only records that expire before but not including this date will be returned.
            </summary>
            <value>
            The expiry end date.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IOptionListRequest.Top">
            <summary>
            Gets or sets the top value. Only the top N results will be returned.
            </summary>
            <value>
            The top value.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IOptionListRequest.MAX_TOP_VALUE">
            <summary>
            Gets the maximum value that <see cref="P:MetaStock.DataAPI.IOptionListRequest.Top"/> can be set to.
            Requests with <see cref="P:MetaStock.DataAPI.IOptionListRequest.Top"/> set to a greater value will be rejected.
            </summary>
            <value>
            The maximum value that <see cref="P:MetaStock.DataAPI.IOptionListRequest.Top"/> can be set to.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IOptionListRequest.Skip">
            <summary>
            Gets or sets the skip value. N results will be skipped in the result. The first record returned 
            will be the N+1th record in the result set.
            </summary>
            <value>
            The skip value.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IOptionListRequest.MAX_RECORDS">
            <summary>
            Gets the maximum number of records that can be returned from the service.
            </summary>
            <value>
            The maximum number of records that can be returned from the service.
            </value>
            <remarks>
            <see cref="P:MetaStock.DataAPI.IOptionListRequest.Skip"/> + <see cref="P:MetaStock.DataAPI.IOptionListRequest.Top"/> can't be greater than this value.
            </remarks>
        </member>
        <member name="P:MetaStock.DataAPI.IOptionListRequest.RequestContext">
            <summary>
            Gets or sets the request context.
            </summary>
            <value>
            The request context.
            </value>
            <remarks>
            A <see cref="T:MetaStock.DataAPI.OptionListRequestContext"/> object should be created once and set on each request when making a sequence of requests
            to retrieve option list data. This context will store session information that will ensure that each request in the sequence is directed
            to the same machine behind the load balancer.
            </remarks>
        </member>
        <member name="T:MetaStock.DataAPI.OptionListRequest">
            <summary>
            Represents a request for options for the underlying symbol.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.OptionListRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.OptionListRequest"/> class.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.OptionListRequest.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.OptionListRequest.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.OptionListRequest.Symbol">
            <summary>
            Gets or sets the underlying symbol.
            </summary>
            <value>
            The underlying symbol.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.OptionListRequest.ExpiryStart">
            <summary>
            Gets or sets the expiry start date.
            Only records that expire on or after this date will be returned.
            </summary>
            <value>
            The expiry start date.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.OptionListRequest.ExpiryEnd">
            <summary>
            Gets or sets the expiry end date.
            Only records that expire before but not including this date will be returned.
            </summary>
            <value>
            The expiry end date.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.OptionListRequest.Top">
            <summary>
            Gets or sets the top value. Only the top N results will be returned.
            </summary>
            <value>
            The top value.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.OptionListRequest.MAX_TOP_VALUE">
            <summary>
            Gets the maximum value that <see cref="P:MetaStock.DataAPI.OptionListRequest.Top"/> can be set to.
            Requests with <see cref="P:MetaStock.DataAPI.OptionListRequest.Top"/> set to a greater value will be rejected.
            </summary>
            <value>
            The maximum value that <see cref="P:MetaStock.DataAPI.OptionListRequest.Top"/> can be set to.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.OptionListRequest.Skip">
            <summary>
            Gets or sets the skip value. N results will be skipped in the result. The first record returned
            will be the N+1th record in the result set.
            </summary>
            <value>
            The skip value.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.OptionListRequest.MAX_RECORDS">
            <summary>
            Gets the maximum number of records that can be returned from the service.
            </summary>
            <value>
            The maximum number of records that can be returned from the service.
            </value>
            <remarks>
              <see cref="P:MetaStock.DataAPI.OptionListRequest.Skip"/> + <see cref="P:MetaStock.DataAPI.OptionListRequest.Top"/> can't be greater than this value.
            </remarks>
        </member>
        <member name="P:MetaStock.DataAPI.OptionListRequest.RequestContext">
            <summary>
            Gets or sets the request context.
            </summary>
            <value>
            The request context.
            </value>
            <remarks>
            A <see cref="T:MetaStock.DataAPI.OptionListRequestContext"/> object should be created once and set on each request when making a sequence of requests
            to retrieve option list data. This context will store session information that will ensure that each request in the sequence is directed
            to the same machine behind the load balancer.
            </remarks>        
        </member>
        <member name="T:MetaStock.DataAPI.IOptionListRequestContext">
            <summary>
            Represents a request context that is used to coordinate option list requests that require
            multiple requests to retrieve all data.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.OptionListRequestContext">
            <summary>
            Represents a request context that is used to coordinate option list requests that require
            multiple requests to retrieve all data.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.OptionListRequestContext.Context">
            <summary>
            The actual context object that is specific to the plug-in.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.IOptionListResponse">
            <summary>
            Represents the response for a option list request.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IOptionListResponse.OptionList">
            <summary>
            Gets the option list.
            </summary>
            <value>
            The option list.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IOptionListResponse.TotalRecords">
            <summary>
            Gets the total records found.
            </summary>
            <value>
            The total records found.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.OptionListResponse">
            <summary>
            Represents the response for a option list request.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.OptionListResponse.OptionList">
            <summary>
            Gets the option list.
            </summary>
            <value>
            The option list.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.OptionListResponse.TotalRecords">
            <summary>
            Gets the total records found.
            </summary>
            <value>
            The total records found.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.OptionPeriodicity">
            <summary>
            The periodicity of the option.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.OptionPeriodicity.Undefined">
            <summary>
            Undefined periodicity.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.OptionPeriodicity.Daily">
            <summary>
            Daily periodicity.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.OptionPeriodicity.Weekly">
            <summary>
            Weekly periodicity.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.OptionPeriodicity.Monthly">
            <summary>
            Monthly periodicity.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.OptionPeriodicity.Quarterly">
            <summary>
            Quarterly periodicity.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.OptionType">
            <summary>
            The type of option.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.OptionType.Put">
            <summary>
            Put option.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.OptionType.Call">
            <summary>
            Call option.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.IQoSRequest">
            <summary>
            Represents a request for quality of service information.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IQoSRequest.Symbol">
            <summary>
            The symbol being requested.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.QoSRequest">
            <summary>
            Represents a request for quality of service information.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.QoSRequest.Symbol">
            <summary>
            The symbol being requested.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.IQoSResponse">
            <summary>
            Represents quality of service information returned from a quality of service request.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IQoSResponse.IsDelayed">
            <summary>
            Gets a value indicating whether the quality of service is delayed.
            </summary>
            <value>
            <c>true</c> if the user permission is for delayed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.QoSResponse">
            <summary>
            Represents quality of service information returned from a quality of service request.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.QoSResponse.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.QoSResponse"/> class.
            </summary>
            <param name="isDelayed">if set to <c>true</c> if delayed.</param>        
        </member>
        <member name="P:MetaStock.DataAPI.QoSResponse.IsDelayed">
            <summary>
            Gets a value indicating whether the quality of service is delayed.
            </summary>
            <value>
            <c>true</c> if the user permission is for delayed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.ISnapshotWithTimeout.CleanupTimedOutSubsriptions">
            <summary>
            Cleans up subscriptions that have taken too long to return data.
            </summary>
            <returns>
            A DateTime value indicating earliest expiration time of all pending subscriptions. Returns DateTime.Max if 
            no subscriptions are pending.
            </returns>
        </member>
        <member name="T:MetaStock.DataAPI.Logging.Log4NetLogFactory">
            <summary>
            log factory for log4net loggers
            </summary>    
            <remarks>
            Creates a log4net repository so that the DataAPI can configure it's logging settings independent
            of any application configuration that may be using log4net.
            </remarks>
        </member>
        <member name="T:MetaStock.DataAPI.Logging.Log4NetLogger">
            <summary>
            log4net implementation of ILogger
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.SnapshotService.SnapshotServiceLogger">
            <summary>
            Does logging for calls on <see cref="T:MetaStock.DataAPI.ISnapshotService"/>.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.SubscriptionService.SubscriptionTranslateDataProviderBase`4">
            <summary>
            Provides data API subscription interface from data provider subscription interface. Notifies the 
            parent when the subscription is subscribed or closed.
            </summary>
            <typeparam name="TSubscriptionDataProvider">ISubscriptionDataProvider derived type</typeparam>
            <typeparam name="TRequest">the request parameter type for this subscription</typeparam>
            <typeparam name="TEventArgs">the event args return type for this subscription</typeparam>
            <typeparam name="SubscriptionTranslateDataProvider">SubscriptionTranslateDataProvider type that inherits from this class</typeparam>   
        </member>
        <member name="T:MetaStock.DataAPI.SubscriptionService.ISubscriptionTranslateDataProviderBase`1">
            <summary>
            Allows generic handling of <see cref="T:MetaStock.DataAPI.SubscriptionService.SubscriptionTranslateDataProviderBase`4"/> derived types.
            </summary>
            <typeparam name="TSubscriptionDataProvider">ISubscriptionDataProvider derived type.</typeparam>
        </member>
        <member name="T:MetaStock.DataAPI.SubscriptionService.SubscriptionAsyncOperationBase`2">
            <summary>
            Uses a <see cref="T:System.ComponentModel.AsyncOperation"/> object to control how events are marshaled.
            The <see cref="T:System.ComponentModel.AsyncOperation"/> is created in the subscribe method. If Subscribe
            is called from a UI thread, then events will fire on the same UI thread that called Subscribe.
            If Subscribe is not called from a UI thread, then the events will be called on a thread pool thread.
            </summary>
            <typeparam name="TRequest">The type of the request parameter.</typeparam>
            <typeparam name="TEventArgs">The type of the DataLoad event argument.</typeparam>
        </member>
        <member name="M:MetaStock.DataAPI.SubscriptionService.SubscriptionAsyncOperationBase`2.OnDataLoaded(`1)">
            <summary>
            Fires the DataLoaded event
            </summary>        
        </member>
        <member name="T:MetaStock.DataAPI.SubscriptionService.SubscriptionLoggerBase`2">
            <summary>
            Provides some basic logging information about subscription method calls and events.
            </summary>
            <typeparam name="TRequest">The request type of the subscription.</typeparam>
            <typeparam name="TEventArgs">The type of DataLoad event args of the subscription.</typeparam>
        </member>
        <member name="T:MetaStock.DataAPI.SubscriptionService.SubscriptionServiceBase`5">
            <summary>
            Coordinates subscriptions with the state of the TimeSeriesDataManager. If the TimeSeriesDataManager
            is not yet connected, then subscriptions will be put into a pending state until TimeSeriesDataManager 
            is connected. Also ensures that all subscriptions are closed when TimeSeriesDataManager is closed and
            all subscriptions are set to error if TimeSeriesDataManager is in error state.
            </summary>
            <typeparam name="TDataProvider">The type of the data provider.</typeparam>
            <typeparam name="TSubscriptionTranslateDataProvider">
            The subscription type that translates from the data provider interface to the DataAPI subscription interface.
            </typeparam>
            <typeparam name="TSubscriptionDataProvider">The data provider subscription type.</typeparam>
            <typeparam name="TRequest">The request type for the subscription.</typeparam>
            <typeparam name="TDataLoadEventArgs">The EventArgs type for the subscription.</typeparam>
        </member>
        <member name="T:MetaStock.DataAPI.SubscriptionService.ISubscriptionService`1">
            <summary>
            Allows generic handling of subscription services that
            have different DataProvider types.
            </summary>
            <typeparam name="TDataProvider">The type of the data provider plug-in.</typeparam>
        </member>
        <member name="T:MetaStock.DataAPI.SubscriptionService.ISubscriptionParent`1">
            <summary>
            Subscription parent interface that allows global handling of subscriptions.
            </summary>
            <typeparam name="TSubscription"></typeparam>
        </member>
        <member name="T:MetaStock.DataAPI.SubscriptionService.SubscriptionProxyBase`2">
            <summary>
            A proxy subscription that is used in place of a real subscription object from the data provider.
            A proxy subscription can be used if the data provider is still connecting or is in an error state.
            </summary>
            <typeparam name="TRequest">The request type</typeparam>
            <typeparam name="TDataLoadEventArgs">The data event argument type</typeparam>
        </member>
        <member name="T:MetaStock.DataAPI.CurrencyBaseRelationship">
            <summary>
            Represents the type of relationship a currency has to it's base currency.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.CurrencyBaseRelationship.Variable">
            <summary>
            The currency is related to the base currency based on a floating exchange rate.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.CurrencyBaseRelationship.Fraction">
            <summary>
            The currency is a fixed fraction of the base currency.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.CurrencyBaseRelationship.Multiple">
            <summary>
            The currency is a fixed multiple of the base currency.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.ICurrency">
            <summary>
            Represents a currency.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.ICurrency.ShortName">
            <summary>
            Gets the short name of the currency.
            </summary>
            <value>
            The short name.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ICurrency.Symbol">
            <summary>
            Gets the symbol that corresponds to this currency.
            </summary>
            <value>
            The symbol.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ICurrency.LongName">
            <summary>
            Gets the long name of the currency.
            </summary>
            <value>
            The long name.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ICurrency.IsPrimary">
            <summary>
            Gets a value indicating whether this currency is primary.
            </summary>
            <value>
            <c>true</c> if this instance is primary; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ICurrency.IsQuotedAgainstBase">
            <summary>
            Gets a value indicating whether this instance is quoted against the base currency.
            </summary>
            <value>
            <c>true</c> if this instance is quoted against the base currency; otherwise, <c>false</c>.
            </value>
            <example>
            CAD has a base currency of USD and is quoted against base CAD/USD. AUD is not quoted against base
            </example>
        </member>
        <member name="P:MetaStock.DataAPI.ICurrency.BaseCurrency">
            <summary>
            Gets the <see cref="P:MetaStock.DataAPI.ICurrency.ShortName"/> of the base currency.
            </summary>        
            <value>
            The base currency.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ICurrency.BaseRelationship">
            <summary>
            Gets the type of relationship to the base currency.
            </summary>
            <value>
            The base relationship.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ICurrency.BaseFactor">
            <summary>
            Gets the currency base factor for converting the currency to the base currency. 
            Only valid if <see cref="P:MetaStock.DataAPI.ICurrency.BaseRelationship"/>
            is <see cref="F:MetaStock.DataAPI.CurrencyBaseRelationship.Fraction"/> or <see cref="F:MetaStock.DataAPI.CurrencyBaseRelationship.Multiple"/>.        
            </summary>
            <value>
            The currency base factor.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.Currency">
            <summary>
            Represents a currency.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.Currency.ShortName">
            <summary>
            Gets the short name of the currency.
            </summary>
            <value>
            The short name.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.Currency.Symbol">
            <summary>
            Gets the symbol that corresponds to this currency.
            </summary>
            <value>
            The symbol.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.Currency.LongName">
            <summary>
            Gets the long name of the currency.
            </summary>
            <value>
            The long name.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.Currency.IsPrimary">
            <summary>
            Gets a value indicating whether this currency is primary.
            </summary>
            <value>
            <c>true</c> if this instance is primary; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.Currency.IsQuotedAgainstBase">
            <summary>
            Gets a value indicating whether this instance is quoted against the base currency.
            </summary>
            <value>
            <c>true</c> if this instance is quoted against the base currency; otherwise, <c>false</c>.
            </value>
            <example>
            CAD has a base currency of USD and is quoted against base CAD/USD. AUD is not quoted against base
              </example>
        </member>
        <member name="P:MetaStock.DataAPI.Currency.BaseCurrency">
            <summary>
            Gets the <see cref="P:MetaStock.DataAPI.Currency.ShortName"/> of the base currency.
            </summary>
            <value>
            The base currency.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.Currency.BaseRelationship">
            <summary>
            Gets the type of relationship to the base currency.
            </summary>
            <value>
            The base relationship.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.Currency.BaseFactor">
            <summary>
            Gets the currency base factor. Only valid if <see cref="P:MetaStock.DataAPI.Currency.BaseRelationship"/>
            is <see cref="F:MetaStock.DataAPI.CurrencyBaseRelationship.Fraction"/> or <see cref="F:MetaStock.DataAPI.CurrencyBaseRelationship.Multiple"/>
            </summary>
            <value>
            The currency base factor.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.ICurrencyCollection">
            <summary>
            A collection of currencies.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.ICurrencyCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.ICurrencyCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ICurrencyCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:MetaStock.DataAPI.ICurrency"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:MetaStock.DataAPI.ICurrency"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="T:MetaStock.DataAPI.CurrencyCollection">
            <summary>
            A collection of units of measurement.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.CurrencyCollection.#ctor(MetaStock.DataAPI.ICurrency[])">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.CurrencyCollection"/> class.
            </summary>
            <param name="items">The items to put in the collection.</param>
        </member>
        <member name="T:MetaStock.DataAPI.IDataAPIConfiguration">
            <summary>
            Provides global configuration values that are specified at initialization time.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IDataAPIConfiguration.ChunkSize">
            <summary>
            Gets or sets the size of the data chunk used for <see cref="T:MetaStock.DataAPI.TimeSeriesChunk"/> objects.
            </summary>
            <value>
            The size of the chunk.
            </value>
            <remarks>
            Setting this value to something smaller than 10,880 can prevent allocations from being done in the large object heap.
            It may be desirable to keep these allocations out of the large object heap to prevent memory fragmentation and perceived 
             memory growth, especially if the <see cref="T:MetaStock.DataAPI.TimeSeriesChunk"/> objects are short-lived.
            </remarks>
        </member>
        <member name="P:MetaStock.DataAPI.IDataAPIConfiguration.ApplicationId">
            <summary>
            Short application identifier that is used to identify the calling application in back-end log files.
            This property must be specified and cannot contain any whitespace characters.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IDataAPIConfiguration.SnapshotTimeout">
            <summary>
            Gets or sets the amount of time that the snapshot service will wait before 
            throwing a timeout exception. The time is in milliseconds.
            </summary>
            <remarks>The default value is 30 seconds.</remarks>
            <value>
            The snapshot timeout time in milliseconds.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IDataAPIConfiguration.EnableUpdatesOnDelayedSymbols">
            <summary>
            Gets or sets a value indicating whether updates should be enabled on delayed symbols.
            </summary>
            <value>
            <c>true</c> if updates are enabled on delayed symbols; otherwise, <c>false</c>.
            </value>
            <remarks>
            Streaming updates on delayed symbols are conflated to 1 minute and the updates 
            are not accurate if bars are built using streaming updates. The time stamp of the update 
            can also be set to the current time instead of the delayed time. It is recommended that 
            this setting be set to false until these issues with delayed symbols have been resolved.
            </remarks>
        </member>
        <member name="T:MetaStock.DataAPI.DataAPIConfiguration">
            <summary>
            Provides global configuration values that are specified at initialization time.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.DataAPIConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.DataAPIConfiguration"/> class.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.DataAPIConfiguration.ChunkSize">
            <summary>
            Gets or sets the size of the data chunk used for <see cref="T:MetaStock.DataAPI.TimeSeriesChunk"/> objects.
            </summary>
            <value>
            The size of the chunk.
            </value>
            <remarks>
            Setting this value to something smaller than 10,880 can prevent allocations from being done in the large object heap.
            It may be desirable to keep these allocations out of the large object heap to prevent memory fragmentation and perceived
            memory growth, especially if the <see cref="T:MetaStock.DataAPI.TimeSeriesChunk"/> objects are short-lived.
            </remarks>
        </member>
        <member name="P:MetaStock.DataAPI.DataAPIConfiguration.ApplicationId">
            <summary>
            Short application identifier that is used to identify the calling application in back-end log files.
            This property must be specified and cannot contain any whitespace characters.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.DataAPIConfiguration.SnapshotTimeout">
            <summary>
            Gets or sets the amount of time that the snapshot service will wait before
            throwing a timeout exception. The time is in milliseconds.
            </summary>
            <value>
            The snapshot timeout time in milliseconds.
            </value>        
        </member>
        <member name="P:MetaStock.DataAPI.DataAPIConfiguration.EnableUpdatesOnDelayedSymbols">
            <summary>
            Gets or sets a value indicating whether updates should be enabled on delayed symbols.
            </summary>
            <value>
            <c>true</c> if updates are enabled on delayed symbols; otherwise, <c>false</c>.
            </value>
            <remarks>
            Streaming updates on delayed symbols are conflated to 1 minute and the updates
            are not accurate if bars are built using streaming updates. The time stamp of the update
            can also be set to the current time instead of the delayed time. It is recommended that
            this setting be set to false until these issues with delayed symbols have been resolved.
            </remarks>
        </member>
        <member name="T:MetaStock.DataAPI.IDataAPIConfigurationInternal">
            <summary>
            read-only configuration interface to ensure that configuration values are not
            updated after being specified
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.DataAPIConfigurationSingleton">
            <summary>
            Provides singleton instance to reference configuration values
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.DataAPIConfigurationDefault">
            <summary>
            copies configuration values from <see cref="T:MetaStock.DataAPI.IDataAPIConfiguration"/> object
            and makes read-only values available
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.SubscriptionService.SubscriptionThrottleBase`2">
            <summary>
            Base class for subscriptions that are throttled using the <see cref="T:MetaStock.DataAPI.SubscriptionService.ThrottleManager"/>.
            </summary>
            <typeparam name="TRequest">The type of the request parameter.</typeparam>
            <typeparam name="TEventArgs">The type of the data event args.</typeparam>
        </member>
        <member name="M:MetaStock.DataAPI.SubscriptionService.SubscriptionThrottleBase`2.OnDataLoaded(`1)">
            <summary>
            Fires the DataLoaded event
            </summary>        
        </member>
        <member name="M:MetaStock.DataAPI.SubscriptionService.SubscriptionThrottleBase`2.OnSubscribe(`0)">
            <summary>
            Calls Subscribe on the inner request.
            </summary>        
        </member>
        <member name="M:MetaStock.DataAPI.SubscriptionService.SubscriptionThrottleBase`2.OnClose">
            <summary>
            Calls close on the inner request.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.SubscriptionService.SubscriptionThrottleBase`2.CreateThrottleData(`0)">
            <summary>
            Creates an IThrottleData item that can be queued and subscribed at a later time.
            </summary>                
        </member>
        <member name="T:MetaStock.DataAPI.SubscriptionService.QoSSubscriptionTranslateDataProvider">
            <summary>
            <see cref="T:MetaStock.DataAPI.IQoSSubscription"/> object returned from <see cref="T:MetaStock.DataAPI.TimeSeriesDataManager"/>.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.SubscriptionService.OptionExpiryDateSubscriptionTranslateDataProvider">
            <summary>
            <see cref="T:MetaStock.DataAPI.IOptionExpiryDateSubscription"/> object returned from <see cref="T:MetaStock.DataAPI.TimeSeriesDataManager"/>.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.ICurrencySubscription">
            <summary>
            Subscribes to instrument metadata and raises events when instrument metadata is available or has changed.
            </summary>    
        </member>
        <member name="M:MetaStock.DataAPI.ICurrencySubscription.Subscribe">
            <summary>
            Subscribes to instrument metadata using the specified request.
            </summary>        
        </member>
        <member name="M:MetaStock.DataAPI.ICurrencySubscription.Close">
            <summary>
            Closes the subscription.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.ICurrencySubscription.StateChanged">
            <summary>
            Occurs when the subscription state has changed.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.ICurrencySubscription.DataLoaded">
            <summary>
            Occurs when data is loaded or updated.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.ICurrencySubscription.DataStatusChanged">
            <summary>
            Occurs when data status has changed.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.IExchangeSubscription">
            <summary>
            Subscribes to instrument metadata and raises events when instrument metadata is available or has changed.
            </summary>    
        </member>
        <member name="M:MetaStock.DataAPI.IExchangeSubscription.Subscribe">
            <summary>
            Subscribes to instrument metadata using the specified request.
            </summary>        
        </member>
        <member name="M:MetaStock.DataAPI.IExchangeSubscription.Close">
            <summary>
            Closes the subscription.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.IExchangeSubscription.StateChanged">
            <summary>
            Occurs when the subscription state has changed.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.IExchangeSubscription.DataLoaded">
            <summary>
            Occurs when data is loaded or updated.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.IExchangeSubscription.DataStatusChanged">
            <summary>
            Occurs when data status has changed.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.IOptionListSubscription">
            <summary>
            Subscribes to instrument metadata and raises events when instrument metadata is available or has changed.
            </summary>    
        </member>
        <member name="M:MetaStock.DataAPI.IOptionListSubscription.Subscribe(MetaStock.DataAPI.IOptionListRequest)">
            <summary>
            Subscribes to option list using the specified request.
            </summary>        
        </member>
        <member name="M:MetaStock.DataAPI.IOptionListSubscription.Close">
            <summary>
            Closes the subscription.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.IOptionListSubscription.StateChanged">
            <summary>
            Occurs when the subscription state has changed.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.IOptionListSubscription.DataLoaded">
            <summary>
            Occurs when data is loaded or updated.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.SubscriptionService.OptionListSubscriptionTranslateDataProvider">
            <summary>
            <see cref="T:MetaStock.DataAPI.IOptionListSubscription"/> object returned from <see cref="T:MetaStock.DataAPI.TimeSeriesDataManager"/>.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.OptionListDataLoadEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:MetaStock.DataAPI.IOptionListSubscription.DataLoaded"/> event.
            </summary>
            <param name="sender">The <see cref="T:MetaStock.DataAPI.IOptionListSubscription"/> object that is raising the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:MetaStock.DataAPI.ICurrencyDataLoadEventArgs">
            <summary>
            Provides data for the UnitsChanged event
            </summary>    
        </member>
        <member name="P:MetaStock.DataAPI.ICurrencyDataLoadEventArgs.Data">
            <summary>
            Gets the current currency collection.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.CurrencyDataLoadEventArgs">
            <summary>
            Provides data for the CurrencyChanged event
            </summary>    
        </member>
        <member name="P:MetaStock.DataAPI.CurrencyDataLoadEventArgs.Data">
            <summary>
            Gets the current currency collection.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.IExchangeDataLoadEventArgs">
            <summary>
            Provides data for the ExchangesChanged event
            </summary>    
        </member>
        <member name="P:MetaStock.DataAPI.IExchangeDataLoadEventArgs.Data">
            <summary>
            Gets the current exchange collection.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.ExchangeDataLoadEventArgs">
            <summary>
            Provides data for the ExchangesChanged event
            </summary>    
        </member>
        <member name="P:MetaStock.DataAPI.ExchangeDataLoadEventArgs.Data">
            <summary>
            Gets the current exchange collection.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.DataAccessErrorType">
            <summary>
            Error types that can occur in the data access library.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataAccessErrorType.None">
            <summary>
            No error.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataAccessErrorType.ConnectFailed">
            <summary>
            Connection to server failed.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataAccessErrorType.InvalidRequest">
            <summary>
            Invalid request parameters.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataAccessErrorType.AuthorizationFailed">
            <summary>
            User authorization failed.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataAccessErrorType.InvalidSymbol">
            <summary>
            Invalid symbol specified.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataAccessErrorType.InvalidFeed">
            <summary>
            Invalid feed specified.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataAccessErrorType.InvalidView">
            <summary>
            Invalid view specified for the given symbol.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataAccessErrorType.InvalidInterval">
            <summary>
            Invalid interval specified for the given symbol.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataAccessErrorType.ServerError">
            <summary>
            Error reported from back-end server.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataAccessErrorType.OutOfMemory">
            <summary>
            Not enough memory available to complete request.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataAccessErrorType.FatalError">
            <summary>
            An unrecoverable fatal error.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataAccessErrorType.RequestLimitExceeded">
            <summary>
            The maximum concurrent request limit has been reached.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataAccessErrorType.AuthorizationUserCanceled">
            <summary>
            User clicked cancel on the login screen.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataAccessErrorType.AuthorizationMultipleLogIn">
            <summary>
            User has logged in to another machine.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataAccessErrorType.AuthorizationNoProductPermission">
            <summary>
            The user does not have the correct product permission.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.IDataAccessException">
            <summary>
            Represents errors that occur with requests to the MetaStock data access library.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.IDataAccessException.GetBaseException">
            <summary>
            Provides COM objects with version-independent access to the System.Exception.GetBaseException()
            method.
            </summary>
            <returns>
            The first exception thrown in a chain of exceptions. If the System.Exception.InnerException
            property of the current exception is a null reference (Nothing in Visual
            Basic), this property returns the current exception.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.IDataAccessException.ToString">
            <summary>
            Provides COM objects with version-independent access to the System.Exception.ToString()
            method.
            </summary>
            <returns>
             A string that represents the current System.Exception object.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.IDataAccessException.ErrorType">
            <summary>
            Gets the type of error that occurred.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IDataAccessException.DataProviderError">
            <summary>
            Gets the data provider specific error that occurred.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IDataAccessException.InnerException">
            <summary>
            Provides COM objects with version-independent access to the System.Exception.InnerException
            property.
            </summary>
            <returns>
            An instance of System.Exception that describes the error that caused the
            current exception. The System.Exception.InnerException property returns the
            same value that was passed to the constructor, or a null reference (Nothing
            in Visual Basic) if the inner exception value was not supplied to the constructor.
            This property is read-only.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.IDataAccessException.Message">
            <summary>
            Provides COM objects with version-independent access to the System.Exception.Message
            property.
            </summary>
            <returns>
            The error message that explains the reason for the exception, or an empty
            string("").
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.IDataAccessException.Source">
            <summary>
            Provides COM objects with version-independent access to the System.Exception.Source
            property.
            </summary>
            <returns>
            The name of the application or the object that causes the error.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.IDataAccessException.StackTrace">
            <summary>
            Provides COM objects with version-independent access to the System.Exception.StackTrace
            property.
            </summary>
            <returns>
            A string that describes the contents of the call stack, with the most recent
            method call appearing first.
            </returns>
        </member>
        <member name="T:MetaStock.DataAPI.DataAccessException">
            <summary>
            Represents errors that occur with requests to the MetaStock data access library.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.DataAccessException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.DataAccessException"/> class.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.DataAccessException.#ctor(System.String,MetaStock.DataAPI.DataAccessErrorType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.DataAccessException"/> class with
            the given error message, error type and data provider error.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.DataAccessException.#ctor(System.String,System.Exception,MetaStock.DataAPI.DataAccessErrorType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.DataAccessException"/> class with
            the given nested exception, error message, error type and data provider error.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.DataAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.DataAccessException"/> class from the
            specified <see cref="T:System.Runtime.Serialization.SerializationInfo"/> and <see cref="T:System.Runtime.Serialization.StreamingContext"/>
            instances.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:MetaStock.DataAPI.DataAccessException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>        
        </member>
        <member name="P:MetaStock.DataAPI.DataAccessException.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
            <returns>The error message that explains the reason for the exception, or an empty string("").</returns>
        </member>
        <member name="P:MetaStock.DataAPI.DataAccessException.DataProviderError">
            <summary>
            Gets the data provider specific error that occurred.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.DataAccessException.ErrorType">
            <summary>
            Gets the type of error that occurred.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.DataManagerState">
            <summary>
            Connection state of the data manager.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataManagerState.Initial">
            <summary>
            Initial state. Connect has not yet been called.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataManagerState.Connecting">
            <summary>
            Connecting state. Connect has been called and the data manager is waiting for
            a connection response.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataManagerState.Connected">
            <summary>
            Connected state. The data manager has successfully connected and is in a ready state.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataManagerState.Closed">
            <summary>
            Closed state. The connection has been closed.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataManagerState.Error">
            <summary>
            Error state. An error occurred while attempting to connect.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.DataManagerStateChangedEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:MetaStock.DataAPI.ITimeSeriesDataManager.StateChanged"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:MetaStock.DataAPI.IDataManagerStateChangedArgs"/> that contains the event data.</param>
        </member>
        <member name="T:MetaStock.DataAPI.IDataManagerStateChangedArgs">
            <summary>
            Provides data for the <see cref="E:MetaStock.DataAPI.ITimeSeriesDataManager.StateChanged"/> event.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IDataManagerStateChangedArgs.State">
            <summary>
            Gets the current data manager state.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IDataManagerStateChangedArgs.Exception">
            <summary>
            If the State is <see cref="F:MetaStock.DataAPI.DataManagerState.Error"/>, gets error information about the cause of the error.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.DataManagerStateChangedArgs">
            <summary>
            Provides data for the <see cref="E:MetaStock.DataAPI.ITimeSeriesDataManager.StateChanged"/> event.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.DataManagerStateChangedArgs.State">
            <summary>
            Gets the current data manager state.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.DataManagerStateChangedArgs.Exception">
            <summary>
            If the State is <see cref="F:MetaStock.DataAPI.DataManagerState.Error"/>, gets error information about the cause of the error.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.SubscriptionService.ThrottleManager">
            <summary>
            Queues up requests if max concurrent request threshold is exceeded. When requests
            complete, queued requests are executed.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.ITimeZoneSubscription">
            <summary>
            Subscribes to instrument metadata and raises events when instrument metadata is available or has changed.
            </summary>    
        </member>
        <member name="M:MetaStock.DataAPI.ITimeZoneSubscription.Subscribe">
            <summary>
            Subscribes to instrument metadata using the specified request.
            </summary>        
        </member>
        <member name="M:MetaStock.DataAPI.ITimeZoneSubscription.Close">
            <summary>
            Closes the subscription.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.ITimeZoneSubscription.StateChanged">
            <summary>
            Occurs when the subscription state has changed.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.ITimeZoneSubscription.DataLoaded">
            <summary>
            Occurs when data is loaded or updated.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.ITimeZoneSubscription.DataStatusChanged">
            <summary>
            Occurs when data status has changed.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.IUnitSubscription">
            <summary>
            Subscribes to instrument metadata and raises events when instrument metadata is available or has changed.
            </summary>    
        </member>
        <member name="M:MetaStock.DataAPI.IUnitSubscription.Subscribe">
            <summary>
            Subscribes to instrument metadata using the specified request.
            </summary>        
        </member>
        <member name="M:MetaStock.DataAPI.IUnitSubscription.Close">
            <summary>
            Closes the subscription.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.IUnitSubscription.StateChanged">
            <summary>
            Occurs when the subscription state has changed.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.IUnitSubscription.DataLoaded">
            <summary>
            Occurs when data is loaded or updated.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.IUnitSubscription.DataStatusChanged">
            <summary>
            Occurs when data status has changed.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.ITimeZoneDataLoadEventArgs">
            <summary>
            Provides data for the UnitsChanged event
            </summary>    
        </member>
        <member name="P:MetaStock.DataAPI.ITimeZoneDataLoadEventArgs.Data">
            <summary>
            Gets the current time zone collection.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.TimeZoneDataLoadEventArgs">
            <summary>
            Provides data for the TimeZonesChanged event
            </summary>    
        </member>
        <member name="P:MetaStock.DataAPI.TimeZoneDataLoadEventArgs.Data">
            <summary>
            Gets the current time zone collection.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.DataStatus">
            <summary>
            Provides data status values.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataStatus.Live">
            <summary>
            Data is live. Real-time data is up to date.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataStatus.Stale">
            <summary>
            Data is out of date, but will recover. Can happen if connection to real-time feed is interrupted.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataStatus.Closed">
            <summary>
            The instrument has been dropped from the data feed or removed from the server.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataStatus.ReloadNeeded">
            <summary>
            Data needs to be refreshed. This will normally happen after edits, stock splits, 
            or when historical data is topped up.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.DataStatusChangedEventHandler">
            <summary>
            Represents the method that handles DataStatusChanged events.
            </summary>
            <param name="sender">The object that is raising the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:MetaStock.DataAPI.IDataStatusChangedEventArgs">
            <summary>
            Provides event data for DataStatusChanged events.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IDataStatusChangedEventArgs.Status">
            <summary>
            Gets the status.
            </summary>
            <value>
            The status.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.DataStatusChangedEventArgs">
            <summary>
            Provides event data for DataStatusChanged events.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.DataStatusChangedEventArgs.#ctor(MetaStock.DataAPI.DataStatus)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.DataStatusChangedEventArgs"/> class.
            </summary>
            <param name="status">The status.</param>
        </member>
        <member name="P:MetaStock.DataAPI.DataStatusChangedEventArgs.Status">
            <summary>
            Gets the status.
            </summary>
            <value>
            The status.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.DataType">
            <summary>
            Represents the available data types returned in a data table.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataType.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataType.DateTime">
            <summary>
            DateTime
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataType.Double">
            <summary>
            Double
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataType.String">
            <summary>
            String
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataType.Integer">
            <summary>
            Integer Int32.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataType.Long">
            <summary>
            Long Int64
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DataType.TimeSpan">
            <summary>
            Time span.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.DisplayUnitType">
            <summary>
            The display unit type.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DisplayUnitType.Unknown">
            <summary>
            The display unit is unknown.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DisplayUnitType.Fraction">
            <summary>
            The display unit is a fraction.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DisplayUnitType.Decimal">
            <summary>
            The display unit is a decimal.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.IDisplayUnit">
            <summary>
            Describes how the data precision should be displayed.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IDisplayUnit.Type">
            <summary>
            Gets the type of display unit.
            </summary>
            <value>
            The display unit type.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IDisplayUnit.Value">
            <summary>
            Gets the display unit value. 
            If <see cref="P:MetaStock.DataAPI.IDisplayUnit.Type"/> is <see cref="F:MetaStock.DataAPI.DisplayUnitType.Decimal"/> then this represents the number
            of decimal places that should be displayed. If <see cref="P:MetaStock.DataAPI.IDisplayUnit.Type"/> is <see cref="F:MetaStock.DataAPI.DisplayUnitType.Fraction"/> 
            then this represents the fractional denominator of the data.
            </summary>
            <value>
            The display unit value.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.DisplayUnit">
            <summary>
            Describes how the data precision should be displayed.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.DisplayUnit.Type">
            <summary>
            Gets the type of display unit.
            </summary>
            <value>
            The display unit type.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.DisplayUnit.Value">
            <summary>
            Gets the display unit value.
            If <see cref="P:MetaStock.DataAPI.DisplayUnit.Type"/> is <see cref="F:MetaStock.DataAPI.DisplayUnitType.Decimal"/> then this represents the number
            of decimal places that should be displayed. If <see cref="P:MetaStock.DataAPI.DisplayUnit.Type"/> is <see cref="F:MetaStock.DataAPI.DisplayUnitType.Fraction"/>
            then this represents the fractional denominator of the data.
            </summary>
            <value>
            The display unit value.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.IEconomicAgency">
            <summary>
            Economic agency.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IEconomicAgency.IsPreliminary">
            <summary>
            Gets a value indicating whether this instance is preliminary.
            </summary>
            <value>
            <c>true</c> if this instance is preliminary; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IEconomicAgency.PreliminaryId">
            <summary>
            Gets the preliminary id.
            </summary>
            <value>
            The preliminary id.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IEconomicAgency.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.EconomicAgency">
            <summary>
            Economic agency.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.EconomicAgency.IsPreliminary">
            <summary>
            Gets a value indicating whether this instance is preliminary.
            </summary>
            <value>
            <c>true</c> if this instance is preliminary; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.EconomicAgency.PreliminaryId">
            <summary>
            Gets the preliminary id.
            </summary>
            <value>
            The preliminary id.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.EconomicAgency.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.IEconomicAgencyCollection">
            <summary>
            Collection of economic agencies.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.IEconomicAgencyCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.IEconomicAgencyCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IEconomicAgencyCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:MetaStock.DataAPI.IEconomicAgency"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:MetaStock.DataAPI.IEconomicAgency"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="T:MetaStock.DataAPI.EconomicAgencyCollection">
            <summary>
            Collection of economic agencies.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.IEconomicData">
            <summary>
            Data for economic instruments.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IEconomicData.BaseYear">
            <summary>
            Economic data year.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IEconomicData.Period">
            <summary>
            Periodicity.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IEconomicData.Consolidation">
            <summary>
            Consolidation rule.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IEconomicData.Agencies">
            <summary>
            Gets the collection of economic agencies.
            </summary>
            <value>
            The economic agencies collection.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.EconomicData">
            <summary>
            Data for economic instruments.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.EconomicData.BaseYear">
            <summary>
            Economic data year.
            </summary>    
        </member>
        <member name="P:MetaStock.DataAPI.EconomicData.Period">
            <summary>
            Periodicity.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.EconomicData.Consolidation">
            <summary>
            Consolidation rule.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.EconomicData.Agencies">
            <summary>
            Gets the collection of economic agencies.
            </summary>
            <value>
            The economic agencies collection.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.EconomicPeriodicity">
            <summary>
            Periodicity for economic data.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.EconomicPeriodicity.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.EconomicPeriodicity.Weekly">
            <summary>
            Weekly.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.EconomicPeriodicity.Monthly">
            <summary>
            Monthly.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.EconomicPeriodicity.Quarterly">
            <summary>
            Quarterly.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.EconomicPeriodicity.Yearly">
            <summary>
            Yearly.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.EconomicConsolidation">
            <summary>
            Consolidation rule for economic data.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.EconomicConsolidation.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.EconomicConsolidation.Last">
            <summary>
            Last.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.EconomicConsolidation.Sum">
            <summary>
            Sum.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.IExchange">
            <summary>
            Represents an exchange
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IExchange.ShortName">
            <summary>
            Gets the short name of the exchange.
            </summary>
            <value>
            The short name.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IExchange.LongName">
            <summary>
            Gets the long name of the exchange.
            </summary>
            <value>
            The long name.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IExchange.Suffix">
            <summary>
            Gets the suffix of the exchange.
            </summary>
            <value>
            The suffix.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.Exchange">
            <summary>
            Represents an exchange
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.Exchange.ShortName">
            <summary>
            Gets the short name of the exchange.
            </summary>
            <value>
            The short name.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.Exchange.LongName">
            <summary>
            Gets the long name of the exchange.
            </summary>
            <value>
            The long name.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.Exchange.Suffix">
            <summary>
            Gets the suffix of the exchange.
            </summary>
            <value>
            The suffix.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.IExchangeCollection">
            <summary>
            A collection of exchanges
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.IExchangeCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.IExchangeCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IExchangeCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:MetaStock.DataAPI.IExchange"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:MetaStock.DataAPI.IExchange"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="T:MetaStock.DataAPI.ExchangeCollection">
            <summary>
            A collection of exchanges
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.ExchangeCollection.#ctor(MetaStock.DataAPI.IExchange[])">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.ExchangeCollection"/> class.
            </summary>
            <param name="items">The items to put in the collection.</param>
        </member>
        <member name="T:MetaStock.DataAPI.IFactInfo">
            <summary>
            Represents information about a fact.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IFactInfo.Name">
            <summary>
            Gets the requestable fact name.
            </summary>
            <value>
            The fact name.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IFactInfo.Description">
            <summary>
            Gets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IFactInfo.ScalingFactor">
            <summary>
            Gets the scaling factor.
            </summary>
            <value>
            The scaling factor.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IFactInfo.StartDate">
            <summary>
            Gets the earliest date that data can be requested from.
            </summary>
            <value>
            The start date.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IFactInfo.EndDate">
            <summary>
            Gets the latest date that data can be requested to.
            </summary>
            <value>
            The end date.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IFactInfo.DataType">
            <summary>
            Gets the data type of the data.
            </summary>
            <value>
            The type of the data.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IFactInfo.ValueType">
            <summary>
            Gets a description of the data made available from the fact.
            </summary>
            <value>
            The type of the value.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IFactInfo.ScaledDisplayUnit">
            <summary>
            Gets the display unit for scaled data.
            </summary>
            <value>
            The scaled display unit.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IFactInfo.UnscaledDisplayUnit">
            <summary>
            Gets the display unit for unscaled data.
            </summary>
            <value>
            The unscaled display unit.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.FactInfo">
            <summary>
            Represents information about a fact.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.FactInfo.Name">
            <summary>
            Gets the requestable fact name.
            </summary>
            <value>
            The fact name.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.FactInfo.Description">
            <summary>
            Gets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.FactInfo.ScalingFactor">
            <summary>
            Gets the scaling factor.
            </summary>
            <value>
            The scaling factor.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.FactInfo.StartDate">
            <summary>
            Gets the earliest date that data can be requested from.
            </summary>
            <value>
            The start date.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.FactInfo.EndDate">
            <summary>
            Gets the latest date that data can be requested to.
            </summary>
            <value>
            The end date.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.FactInfo.DataType">
            <summary>
            Gets the data type of the data.
            </summary>
            <value>
            The type of the data.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.FactInfo.ValueType">
            <summary>
            Gets a description of the data made available from the fact.
            </summary>
            <value>
            The type of the value.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.FactInfo.ScaledDisplayUnit">
            <summary>
            Gets the display unit for scaled data.
            </summary>
            <value>
            The scaled display unit.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.FactInfo.UnscaledDisplayUnit">
            <summary>
            Gets the display unit for unscaled data.
            </summary>
            <value>
            The unscaled display unit.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.IFactInfoCollection">
            <summary>
            A collection of <see cref="T:MetaStock.DataAPI.IFactInfo"/> objects.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.IFactInfoCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.IFactInfoCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IFactInfoCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:MetaStock.DataAPI.IFactInfo"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:MetaStock.DataAPI.IFactInfo"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="T:MetaStock.DataAPI.FactInfoCollection">
            <summary>
            A collection of <see cref="T:MetaStock.DataAPI.IFactInfo"/> objects.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.TimeZoneDataLoadEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:MetaStock.DataAPI.ITimeZoneSubscription.DataLoaded"/> event.
            </summary>
            <param name="sender">The <see cref="T:MetaStock.DataAPI.ITimeZoneSubscription"/> object that is raising the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:MetaStock.DataAPI.SubscriptionService.TimeZoneSubscriptionTranslateDataProvider">
            <summary>
            <see cref="T:MetaStock.DataAPI.ITimeZoneSubscription"/> object returned from <see cref="T:MetaStock.DataAPI.TimeSeriesDataManager"/>.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.ExchangeDataLoadEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:MetaStock.DataAPI.IExchangeSubscription.DataLoaded"/> event.
            </summary>
            <param name="sender">The <see cref="T:MetaStock.DataAPI.IExchangeSubscription"/> object that is raising the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:MetaStock.DataAPI.SubscriptionService.ExchangeSubscriptionTranslateDataProvider">
            <summary>
            <see cref="T:MetaStock.DataAPI.IExchangeSubscription"/> object returned from <see cref="T:MetaStock.DataAPI.TimeSeriesDataManager"/>.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.UnitDataLoadEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:MetaStock.DataAPI.IUnitSubscription.DataLoaded"/> event.
            </summary>
            <param name="sender">The <see cref="T:MetaStock.DataAPI.IUnitSubscription"/> object that is raising the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:MetaStock.DataAPI.SubscriptionService.UnitSubscriptionTranslateDataProvider">
            <summary>
            <see cref="T:MetaStock.DataAPI.IUnitSubscription"/> object returned from <see cref="T:MetaStock.DataAPI.TimeSeriesDataManager"/>.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.CurrencyDataLoadEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:MetaStock.DataAPI.ICurrencySubscription.DataLoaded"/> event.
            </summary>
            <param name="sender">The <see cref="T:MetaStock.DataAPI.ICurrencySubscription"/> object that is raising the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:MetaStock.DataAPI.SubscriptionService.CurrencySubscriptionTranslateDataProvider">
            <summary>
            <see cref="T:MetaStock.DataAPI.ICurrencySubscription"/> object returned from <see cref="T:MetaStock.DataAPI.TimeSeriesDataManager"/>.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.SubscriptionService.FeedSubscriptionTranslateDataProvider">
            <summary>
            <see cref="T:MetaStock.DataAPI.IFeedSubscription"/> object returned from <see cref="T:MetaStock.DataAPI.TimeSeriesDataManager"/>.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.IHoliday">
            <summary>
            Represents a time period that is a holiday.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IHoliday.Start">
            <summary>
            The start date and time of the holiday.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IHoliday.End">
            <summary>
            The end date and time of the holiday.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IHoliday.IsFullDay">
            <summary>
            True if the holiday is a full day an only the date portion 
            of <see cref="P:MetaStock.DataAPI.IHoliday.Start"/> and <see cref="P:MetaStock.DataAPI.IHoliday.End"/> are valid.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.Holiday">
            <summary>
            Represents a time period that is a holiday.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.Holiday.#ctor(System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.Holiday"/> class.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="isFullDay">if set to <c>true</c> holiday time is a full day.</param>
        </member>
        <member name="P:MetaStock.DataAPI.Holiday.Start">
            <summary>
            The start date and time of the holiday.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.Holiday.End">
            <summary>
            The end date and time of the holiday.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.Holiday.IsFullDay">
            <summary>
            True if the holiday is a full day an only the date portion
            of <see cref="P:MetaStock.DataAPI.Holiday.Start"/> and <see cref="P:MetaStock.DataAPI.Holiday.End"/> are valid.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.IHolidayCollection">
            <summary>
            Represents a collection of holidays for a symbol.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.IHolidayCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.IHolidayCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IHolidayCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:MetaStock.DataAPI.IHoliday"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:MetaStock.DataAPI.IHoliday"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="T:MetaStock.DataAPI.HolidayCollection">
            <summary>
            A collection of units of measurement.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.SubscriptionService.InstrumentSubscriptionTranslateDataProvider">
            <summary>
            <see cref="T:MetaStock.DataAPI.IInstrumentSubscription"/> object returned from <see cref="T:MetaStock.DataAPI.TimeSeriesDataManager"/>.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.InstrumentType">
            <summary>
            The instrument type of the symbol.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.InstrumentType.Cash">
            <summary>
            Cash instrument.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.InstrumentType.CashOption">
            <summary>
            Cash option.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.InstrumentType.MarketIndex">
            <summary>
            Market Index.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.InstrumentType.SpreadData">
            <summary>
            Spread Data.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.InstrumentType.Futures">
            <summary>
            Futures instrument.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.InstrumentType.FuturesOption">
            <summary>
            Futures option.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.InstrumentType.MarketStatistics">
            <summary>
            Market Statistics.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.InstrumentType.Fund">
            <summary>
            Fund.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.InstrumentType.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.InstrumentType.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.ISubscriptionService">
            <summary>
            Provides access to streaming, updating subscriptions.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.ISubscriptionService.CreateTimeSeriesSubscription">
            <summary>
            Creates a new <see cref="T:MetaStock.DataAPI.ITimeSeriesSubscription"/> object.
            </summary>        
            <returns>
            A new <see cref="T:MetaStock.DataAPI.ITimeSeriesSubscription"/> object.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.ISubscriptionService.CreateInstrumentSubscription">
            <summary>
            Creates a new <see cref="T:MetaStock.DataAPI.IInstrumentSubscription"/> object.
            </summary>
            <returns>
            A new <see cref="T:MetaStock.DataAPI.IInstrumentSubscription"/> object.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.ISubscriptionService.CreateFeedSubscription">
            <summary>
            Creates a new <see cref="T:MetaStock.DataAPI.IFeedSubscription"/> object.
            </summary>
            <returns>
            A new <see cref="T:MetaStock.DataAPI.IFeedSubscription"/> object.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.ISubscriptionService.CreateQuoteSubscription">
            <summary>
            Creates a new <see cref="T:MetaStock.DataAPI.IQuoteSubscription"/> object.
            </summary>
            <returns>
            A new <see cref="T:MetaStock.DataAPI.IQuoteSubscription"/> object.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.ISubscriptionService.CreateChainSubscription">
            <summary>
            Creates a new <see cref="T:MetaStock.DataAPI.IChainSubscription"/> object.
            </summary>
            <returns>
            A new <see cref="T:MetaStock.DataAPI.IChainSubscription"/> object.
            </returns>
        </member>
        <member name="T:MetaStock.DataAPI.IIntervalInfo">
            <summary>
            Represents an available interval for a View and a collection of facts for the View and interval.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IIntervalInfo.Interval">
            <summary>
            Gets the supported interval.
            </summary>
            <value>
            The interval.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IIntervalInfo.AllMultiples">
            <summary>
            Gets a value indicating whether all multiples of the <see cref="P:MetaStock.DataAPI.IIntervalInfo.Interval"/> are valid.
            </summary>
            <value>
              <c>true</c> if all multiples are valid; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IIntervalInfo.Facts">
            <summary>
            Gets the fact collection of supported facts for the interval.
            </summary>
            <value>
            The supported facts.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.IntervalInfo">
            <summary>
            Represents an available interval for a View and a collection of facts for the View and interval.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IntervalInfo.Interval">
            <summary>
            Gets the supported interval.
            </summary>
            <value>
            The interval.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IntervalInfo.AllMultiples">
            <summary>
            Gets a value indicating whether all multiples of the <see cref="P:MetaStock.DataAPI.IntervalInfo.Interval"/> are valid.
            </summary>
            <value>
              <c>true</c> if all multiples are valid; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IntervalInfo.Facts">
            <summary>
            Gets the fact collection of supported facts for the interval.
            </summary>
            <value>
            The supported facts.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.IIntervalInfoCollection">
            <summary>
            A collection of <see cref="T:MetaStock.DataAPI.IIntervalInfo"/> objects.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.IIntervalInfoCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.IIntervalInfoCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IIntervalInfoCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:MetaStock.DataAPI.IIntervalInfo"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:MetaStock.DataAPI.IIntervalInfo"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="T:MetaStock.DataAPI.IntervalInfoCollection">
            <summary>
            A collection of <see cref="T:MetaStock.DataAPI.IIntervalInfo"/> objects.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.ITimeSeriesDataManager">
            <summary>
            Top level object used to initialize/shutdown the time series API module. Provides
            access to snapshot and subscription interfaces for retrieving data.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.ITimeSeriesDataManager.Connect(MetaStock.DataAPI.IDataAPIConfiguration)">
            <summary>
            Establishes a connection to the time series data provider.
            This method must be called on a COM STA thread that is running a message pump.
            The status of the connection can be monitored through the <see cref="E:MetaStock.DataAPI.ITimeSeriesDataManager.StateChanged"/>
            event.
            </summary>
            <param name="configuration">
            Specifies global configuration parameters to be used.
            </param>
            <exception cref="T:System.ArgumentException">Thrown if invalid configuration values are specified.</exception>
        </member>
        <member name="M:MetaStock.DataAPI.ITimeSeriesDataManager.Close">
            <summary>
            Closes the connection with the time series data provider. All open subscriptions
            will be closed. Close must be called before application shutdown to ensure a clean shutdown
            sequence.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.ITimeSeriesDataManager.StateChanged">
            <summary>
            Occurs when the <see cref="P:MetaStock.DataAPI.ITimeSeriesDataManager.State"/> property has changed.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesDataManager.State">
            <summary>
            Gets the current state
            </summary>                
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesDataManager.DataProviderException">
            <summary>
            Returns error information when the <see cref="P:MetaStock.DataAPI.ITimeSeriesDataManager.State"/> property is <see cref="F:MetaStock.DataAPI.DataManagerState.Error"/>.
            Will be null if not in an error state.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesDataManager.SnapshotService">
            <summary>
            Gets the snapshot service.
            </summary>
            <value>
            The snapshot service.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesDataManager.SubscriptionService">
            <summary>
            Gets the subscription service.
            </summary>
            <value>
            The subscription service.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.IQuoteDataLoadEventArgs">
            <summary>
            Provides data for the <see cref="E:MetaStock.DataAPI.IQuoteSubscription.DataLoaded"/> event.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteDataLoadEventArgs.Data">
            <summary>
            Gets the data.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.QuoteDataLoadEventArgs">
            <summary>
            Provides data for the <see cref="E:MetaStock.DataAPI.IQuoteSubscription.DataLoaded"/> event.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteDataLoadEventArgs.Data">
            <summary>
            Gets the data.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.IQuoteItem">
            <summary>
            Represents data returned for a quote field.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItem.Field">
            <summary>
            Gets the field.
            </summary>
            <value>
            The field.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItem.Type">
            <summary>
            Gets the data type of the field.
            </summary>
            <value>
            The data type.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItem.Value">
            <summary>
            Gets the value of the field.
            </summary>
            <value>
            The value of the field.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItem.ValueInterop">
            <summary>
            Gets the value of the field as a type compatible with COM clients.
            </summary>
            <value>
            The  value of the field as a type compatible with COM clients.
            </value>
            <remarks>
            The TimeSpan data type will be returned as a <see cref="T:MetaStock.DataAPI.ITimeSpanInterop"/> object.
            </remarks>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItem.IsNA">
            <summary>
            Gets a value indicating whether the value is N/A.
            </summary>
            <value>
              <c>true</c> if the value is N/A; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.QuoteItem">
            <summary>
            Represents data returned for a quote field.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.QuoteItem.GetValue">
            <summary>
            Gets the value from the derived type as type object.
            </summary>        
            <returns>The value of the derived type as type object.</returns>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteItem.Field">
            <summary>
            Gets the field.
            </summary>
            <value>
            The field.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteItem.Type">
            <summary>
            Gets the data type of the field.
            </summary>
            <value>
            The data type.
            </value>        
        </member>
        <member name="P:MetaStock.DataAPI.QuoteItem.Value">
            <summary>
            Gets the value of the field.
            </summary>
            <value>
            The value of the field.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteItem.ValueInterop">
            <summary>
            Gets the value of the field as a type compatible with COM clients.
            </summary>
            <value>
            The  value of the field as a type compatible with COM clients.
            </value>
            <remarks>
            The TimeSpan data type will be returned as a <see cref="T:MetaStock.DataAPI.ITimeSpanInterop"/> object.
            </remarks>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteItem.IsNA">
            <summary>
            Gets a value indicating whether the value is N/A.
            </summary>
            <value>
              <c>true</c> if the value is N/A; otherwise, <c>false</c>.
            </value>        
        </member>
        <member name="T:MetaStock.DataAPI.IQuoteItemDateTime">
            <summary>
            Represents data returned for a quote field that is of type DateTime
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemDateTime.Field">
            <summary>
            Gets the field.
            </summary>
            <value>
            The field.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemDateTime.Type">
            <summary>
            Gets the data type of the field.
            </summary>
            <value>
            The data type.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemDateTime.Value">
            <summary>
            Gets the value of the field.
            </summary>
            <value>
            The value of the field.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemDateTime.ValueInterop">
            <summary>
            Gets the value of the field as a type compatible with COM clients.
            </summary>
            <value>
            The  value of the field as a type compatible with COM clients.
            </value>        
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemDateTime.IsNA">
            <summary>
            Gets a value indicating whether the value is N/A.
            </summary>
            <value>
              <c>true</c> if the value is N/A; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.QuoteItemDateTime">
            <summary>
            Represents data returned for a quote field that is of type DateTime
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.QuoteItemDateTime.GetValue">
            <summary>
            Gets the value as an object.
            </summary>
            <returns>
            Value as an object.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteItemDateTime.Value">
            <summary>
            Gets the value of the field.
            </summary>
            <value>
            The value of the field.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteItemDateTime.Type">
            <summary>
            Gets the data type of the field.
            </summary>
            <value>
            The data type.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteItemDateTime.IsNA">
            <summary>
            Gets a value indicating whether the value is N/A.
            </summary>
            <value>
              <c>true</c> if the value is N/A; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.IQuoteItemDictionary">
            <summary>
            A dictionary of quote field values.
            </summary>    
        </member>
        <member name="M:MetaStock.DataAPI.IQuoteItemDictionary.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemDictionary.Count">
            <summary>
            Gets the number of elements contained in the collection.
            </summary>
            <value>
            The number of elements contained in the collection.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemDictionary.Item(System.String)">
            <summary>
             Gets the element with the specified key.
            </summary>
            <param name="field">The key of the element to get</param>
            <returns>The element with the specified key.</returns>
            <exception cref="T:System.ArgumentNullException">key is null</exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and key is not found.</exception>
        </member>
        <member name="T:MetaStock.DataAPI.QuoteItemDictionary">
            <summary>
            A dictionary of quote field values.
            </summary>    
        </member>
        <member name="M:MetaStock.DataAPI.QuoteItemDictionary.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.QuoteItemDictionary.Add(System.String,MetaStock.DataAPI.IQuoteItem)">
            <summary>
            Adds an element with the provided key and value to the dictionary.
            </summary>
            <param name="key">The object to use as the key of the element to add.</param>
            <param name="value">The object to use as the value of the element to add.</param>
            <exception cref="T:System.NotSupportedException">The collection is read-only.</exception>
        </member>
        <member name="M:MetaStock.DataAPI.QuoteItemDictionary.ContainsKey(System.String)">
            <summary>
            Determines whether the dictionary contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the dictionary.</param>
            <returns>
            true if the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the key; otherwise, false.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.QuoteItemDictionary.Remove(System.String)">
            <summary>
            Removes the element with the specified key from the dictionary.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns>
            true if the element is successfully removed; otherwise, false.  This method also returns false if <paramref name="key"/> was not found in the original dictionary /&gt;.
            </returns>
            <exception cref="T:System.NotSupportedException">The collection is read-only.</exception>
        </member>
        <member name="M:MetaStock.DataAPI.QuoteItemDictionary.TryGetValue(System.String,MetaStock.DataAPI.IQuoteItem@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value" /> parameter. This parameter is passed uninitialized.</param>
            <returns>
            true if the dictionary contains an element with the specified key; otherwise, false.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteItemDictionary.Count">
            <summary>
            Gets the number of elements contained in the collection.
            </summary>
            <value>
            The number of elements contained in the collection.
            </value>        
        </member>
        <member name="P:MetaStock.DataAPI.QuoteItemDictionary.Item(System.String)">
            <summary>
             Gets the element with the specified key.
            </summary>
            <param name="field">The key of the element to get</param>
            <returns>The element with the specified key.</returns>
            <exception cref="T:System.ArgumentNullException">key is null</exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and key is not found.</exception>
            <exception cref="T:System.NotSupportedException">The property is set and the collection is read-only.</exception>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteItemDictionary.Keys">
            <summary>
            Gets a collection containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys in the dictionary.</returns>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteItemDictionary.Values">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the dictionary.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the dictionary.</returns>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteItemDictionary.IsReadOnly">
            <summary>
            Gets a value indicating whether the dictionary is read-only.
            </summary>
            <returns>true if the dictionary is read-only; otherwise, false.</returns>
        </member>
        <member name="T:MetaStock.DataAPI.IQuoteItemDouble">
            <summary>
            Represents data returned for a quote field that is of type double
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemDouble.Field">
            <summary>
            Gets the field.
            </summary>
            <value>
            The field.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemDouble.Type">
            <summary>
            Gets the data type of the field.
            </summary>
            <value>
            The data type.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemDouble.Value">
            <summary>
            Gets the value of the field.
            </summary>
            <value>
            The value of the field.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemDouble.ValueInterop">
            <summary>
            Gets the value of the field as a type compatible with COM clients.
            </summary>
            <value>
            The  value of the field as a type compatible with COM clients.
            </value>        
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemDouble.IsNA">
            <summary>
            Gets a value indicating whether the value is N/A.
            </summary>
            <value>
              <c>true</c> if the value is N/A; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.QuoteItemDouble">
            <summary>
            Represents data returned for a quote field that is of type double
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.QuoteItemDouble.GetValue">
            <summary>
            Gets the value as an object.
            </summary>
            <returns>
            Value as an object.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteItemDouble.Value">
            <summary>
            Gets the value of the field.
            </summary>
            <value>
            The value of the field.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteItemDouble.Type">
            <summary>
            Gets the data type of the field.
            </summary>
            <value>
            The data type.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteItemDouble.IsNA">
            <summary>
            Gets a value indicating whether the value is N/A.
            </summary>
            <value>
              <c>true</c> if the value is N/A; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.IQuoteItemInteger">
            <summary>
            Represents data returned for a quote field that is of type Int32
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemInteger.Field">
            <summary>
            Gets the field.
            </summary>
            <value>
            The field.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemInteger.Type">
            <summary>
            Gets the data type of the field.
            </summary>
            <value>
            The data type.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemInteger.Value">
            <summary>
            Gets the value of the field.
            </summary>
            <value>
            The value of the field.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemInteger.ValueInterop">
            <summary>
            Gets the value of the field as a type compatible with COM clients.
            </summary>
            <value>
            The  value of the field as a type compatible with COM clients.
            </value>   
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemInteger.IsNA">
            <summary>
            Gets a value indicating whether the value is N/A.
            </summary>
            <value>
              <c>true</c> if the value is N/A; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.QuoteItemInteger">
            <summary>
            Represents data returned for a quote field that is of type Int32
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.QuoteItemInteger.GetValue">
            <summary>
            Gets the value as an object.
            </summary>
            <returns>
            Value as an object.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteItemInteger.Value">
            <summary>
            Gets the value of the field.
            </summary>
            <value>
            The value of the field.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteItemInteger.Type">
            <summary>
            Gets the data type of the field.
            </summary>
            <value>
            The data type.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteItemInteger.IsNA">
            <summary>
            Gets a value indicating whether the value is N/A.
            </summary>
            <value>
              <c>true</c> if the value is N/A; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.IQuoteItemLong">
            <summary>
            Represents data returned for a quote field that is of type Int64
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemLong.Field">
            <summary>
            Gets the field.
            </summary>
            <value>
            The field.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemLong.Type">
            <summary>
            Gets the data type of the field.
            </summary>
            <value>
            The data type.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemLong.Value">
            <summary>
            Gets the value of the field.
            </summary>
            <value>
            The value of the field.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemLong.ValueInterop">
            <summary>
            Gets the value of the field as a type compatible with COM clients.
            </summary>
            <value>
            The  value of the field as a type compatible with COM clients.
            </value> 
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemLong.IsNA">
            <summary>
            Gets a value indicating whether the value is N/A.
            </summary>
            <value>
              <c>true</c> if the value is N/A; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.QuoteItemLong">
            <summary>
            Represents data returned for a quote field that is of type Int64
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.QuoteItemLong.GetValue">
            <summary>
            Gets the value as an object.
            </summary>
            <returns>
            Value as an object.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteItemLong.Value">
            <summary>
            Gets the value of the field.
            </summary>
            <value>
            The value of the field.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteItemLong.Type">
            <summary>
            Gets the data type of the field.
            </summary>
            <value>
            The data type.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteItemLong.IsNA">
            <summary>
            Gets a value indicating whether the value is N/A.
            </summary>
            <value>
              <c>true</c> if the value is N/A; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.IQuoteItemString">
            <summary>
            Represents data returned for a quote field that is of type string
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemString.Field">
            <summary>
            Gets the field.
            </summary>
            <value>
            The field.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemString.Type">
            <summary>
            Gets the data type of the field.
            </summary>
            <value>
            The data type.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemString.Value">
            <summary>
            Gets the value of the field.
            </summary>
            <value>
            The value of the field.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemString.ValueInterop">
            <summary>
            Gets the value of the field as a type compatible with COM clients.
            </summary>
            <value>
            The  value of the field as a type compatible with COM clients.
            </value> 
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemString.IsNA">
            <summary>
            Gets a value indicating whether the value is N/A.
            </summary>
            <value>
              <c>true</c> if the value is N/A; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.QuoteItemString">
            <summary>
            Represents data returned for a quote field that is of type string
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.QuoteItemString.GetValue">
            <summary>
            Gets the value as an object.
            </summary>
            <returns>
            Value as an object.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteItemString.Value">
            <summary>
            Gets the value of the field.
            </summary>
            <value>
            The value of the field.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteItemString.Type">
            <summary>
            Gets the data type of the field.
            </summary>
            <value>
            The data type.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteItemString.IsNA">
            <summary>
            Gets a value indicating whether the value is N/A.
            </summary>
            <value>
              <c>true</c> if the value is N/A; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.IQuoteItemTimeSpan">
            <summary>
            Represents data returned for a quote field that is of type TimeSpan
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemTimeSpan.Field">
            <summary>
            Gets the field.
            </summary>
            <value>
            The field.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemTimeSpan.Type">
            <summary>
            Gets the data type of the field.
            </summary>
            <value>
            The data type.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemTimeSpan.Value">
            <summary>
            Gets the value of the field.
            </summary>
            <value>
            The value of the field.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemTimeSpan.ValueInterop">
            <summary>
            Gets the value of the field as a type compatible with COM clients.
            </summary>
            <value>
            The  value of the field as a type compatible with COM clients.
            </value>
            <remarks>
            The TimeSpan data type will be returned as a <see cref="T:MetaStock.DataAPI.ITimeSpanInterop"/> object.
            </remarks>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteItemTimeSpan.IsNA">
            <summary>
            Gets a value indicating whether the value is N/A.
            </summary>
            <value>
              <c>true</c> if the value is N/A; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.QuoteItemTimeSpan">
            <summary>
            Represents data returned for a quote field that is of type TimeSpan
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.QuoteItemTimeSpan.GetValue">
            <summary>
            Gets the value as an object.
            </summary>
            <returns>
            Value as an object.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteItemTimeSpan.Value">
            <summary>
            Gets the value of the field.
            </summary>
            <value>
            The value of the field.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteItemTimeSpan.Type">
            <summary>
            Gets the data type of the field.
            </summary>
            <value>
            The data type.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteItemTimeSpan.ValueInterop">
            <summary>
            Gets the value of the field as a type compatible with COM clients.
            </summary>
            <value>
            The  value of the field as a type compatible with COM clients.
            </value>
            <remarks>
            The TimeSpan data type will be returned as a <see cref="T:MetaStock.DataAPI.ITimeSpanInterop"/> object.
            </remarks>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteItemTimeSpan.IsNA">
            <summary>
            Gets a value indicating whether the value is N/A.
            </summary>
            <value>
              <c>true</c> if the value is N/A; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.IQuoteRequest">
            <summary>
            Request parameters for requesting a quote.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.IQuoteRequest.SetFields(System.Object[])">
            <summary>
            Allows setting fields from languages that only support SAFEARRAY of VARIANT array types.
            This method is only intended to be used by COM clients.
            </summary>
            <param name="fieldArray">The fields to be requested.</param>
        </member>
        <member name="M:MetaStock.DataAPI.IQuoteRequest.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteRequest.Symbol">
            <summary>
            Gets or sets the symbol to be requested.
            </summary>
            <value>
            The symbol.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteRequest.Fields">
            <summary>
            Gets or sets the fields to be requested.
            </summary>
            <value>
            The fields to be requested.
            </value>
            <remarks>
            An empty array can be set to indicate that all available fields should
            be requested.
            </remarks>
        </member>
        <member name="T:MetaStock.DataAPI.QuoteRequest">
            <summary>
            Request parameters for requesting a quote.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.QuoteRequest.SetFields(System.Object[])">
            <summary>
            Allows setting fields from languages that only support SAFEARRAY of VARIANT array types.
            This method is only intended to be used by COM clients.
            </summary>
            <param name="fieldArray">The fields to be requested.</param>
        </member>
        <member name="M:MetaStock.DataAPI.QuoteRequest.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.QuoteRequest.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteRequest.Symbol">
            <summary>
            Gets or sets the symbol to be requested.
            </summary>
            <value>
            The symbol.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteRequest.Fields">
            <summary>
            Gets or sets the fields.
            </summary>
            <value>
            The fields.
            </value>
            <remarks>
            An empty array can be set to indicate that all available fields should
            be requested.
            </remarks>
        </member>
        <member name="T:MetaStock.DataAPI.IQuoteResponse">
            <summary>
            Response object that contains data for a <see cref="T:MetaStock.DataAPI.IQuoteSubscription"/>.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteResponse.QuoteItems">
            <summary>
            Gets the quote item data.
            </summary>
            <value>
            The quote item data.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IQuoteResponse.IsImage">
            <summary>
            Gets a value indicating whether the data is an image of the current data or an update to the data.
            </summary>
            <value>
              <c>true</c> if data is an image; <c>false</c> if data is an update.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.QuoteResponse">
            <summary>
            Response object that contains data for a <see cref="T:MetaStock.DataAPI.IQuoteSubscription"/>.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteResponse.QuoteItems">
            <summary>
            Gets the quote item data.
            </summary>
            <value>
            The quote item data.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.QuoteResponse.IsImage">
            <summary>
            Gets a value indicating whether the data is an image of the current data or an update to the data.
            </summary>
            <value>
            <c>true</c> if data is an image; <c>false</c> if data is an update.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.QuoteDataLoadEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:MetaStock.DataAPI.IQuoteSubscription.DataLoaded"/> event.
            </summary>
            <param name="sender">The <see cref="T:MetaStock.DataAPI.IQuoteSubscription"/> object that is raising the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:MetaStock.DataAPI.SubscriptionService.ISubscriptionServiceInternal">
            <summary>
            Subscriptions that are not exposed on the public ISubscriptionService interface.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.SubscriptionService.QuoteSubscriptionTranslateDataProvider">
            <summary>
            <see cref="T:MetaStock.DataAPI.IQuoteSubscription"/> object returned from <see cref="T:MetaStock.DataAPI.TimeSeriesDataManager"/>.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.SnapshotService.SnapshotService">
            <summary>
            Class that provides access to snapshot data rather than streaming updating data.
            </summary>    
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.GetQuote(MetaStock.DataAPI.IQuoteRequest)">
            <summary>
            Gets a real-time quote for the requested fields.
            </summary>
            <param name="request">The request parameters.</param>
            <returns>
            A <see cref="T:MetaStock.DataAPI.IQuoteItemDictionary"/> that contains the requested data.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.BeginGetQuote(MetaStock.DataAPI.IQuoteRequest,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get real-time quote information.
            </summary>
            <param name="request">The request parameters.</param>
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.
            </returns>
            <remarks>
            The BeginGetQuote method starts an asynchronous request for a real-time quote response.
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.SnapshotService.SnapshotService.EndGetQuote(System.IAsyncResult)"/> method to return the actual <see cref="T:MetaStock.DataAPI.IQuoteItemDictionary"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.EndGetQuote(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request for a real-time quote.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>
            &gt;A <see cref="T:MetaStock.DataAPI.IQuoteItemDictionary"/> that contains the requested data.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.GetInstrument(MetaStock.DataAPI.IInstrumentRequest)">
            <summary>
            Gets a instrument metadata for the requested symbol.
            </summary>
            <param name="request">The request parameters.</param>
            <returns>
            A <see cref="T:MetaStock.DataAPI.IInstrument"/> that contains the instrument metadata.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.BeginGetInstrument(MetaStock.DataAPI.IInstrumentRequest,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get instrument metadata.
            </summary>
            <param name="request">The request parameters.</param>
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.
            </returns>
            <remarks>
            The BeginGetInstrument method starts an asynchronous request for instrument metadata.
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.SnapshotService.SnapshotService.EndGetInstrument(System.IAsyncResult)"/> method to return the actual <see cref="T:MetaStock.DataAPI.IInstrument"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.EndGetInstrument(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request for instrument metadata.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>
            &gt;A <see cref="T:MetaStock.DataAPI.IInstrument"/> that contains the requested data.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.GetTimeSeries(MetaStock.DataAPI.ITimeSeriesRequest)">
            <summary>
            Gets time series data.
            </summary>
            <param name="request">The request parameters.</param>
            <returns>
            A <see cref="T:ITimeSeriesChunk[]" /> that contains the instrument metadata.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.BeginGetTimeSeries(MetaStock.DataAPI.ITimeSeriesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get time series data.
            </summary>
            <param name="request">The request parameters.</param>
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.
            </returns>
            <remarks>
            The BeginGetTimeSeries method starts an asynchronous request for instrument metadata.
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.SnapshotService.SnapshotService.EndGetTimeSeries(System.IAsyncResult)"/> method to return the actual <see cref="T:ITimeSeriesChunk[]"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.EndGetTimeSeries(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request for time series data.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>
            &gt;A <see cref="T:ITimeSeriesChunk[]" /> that contains the requested data.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.GetChain(MetaStock.DataAPI.IChainRequest)">
            <summary>
            Gets an instrument chain.
            </summary>
            <param name="request">The request parameters.</param>
            <returns>
            A <see cref="T:MetaStock.DataAPI.IChainItemCollection"/> that contains the chain symbols.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.BeginGetChain(MetaStock.DataAPI.IChainRequest,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get an instrument chain.
            </summary>
            <param name="request">The request parameters.</param>
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.
            </returns>
            <remarks>
            The BeginGetChain method starts an asynchronous request for an instrument chain.
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.SnapshotService.SnapshotService.EndGetChain(System.IAsyncResult)"/> method to return the actual <see cref="T:MetaStock.DataAPI.IChainItemCollection"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.EndGetChain(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request for an instrument chain.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>
            &gt;A <see cref="T:MetaStock.DataAPI.IChainItemCollection"/> that contains the requested data.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.GetCurrencies">
            <summary>
            Gets a collection of currency information.
            </summary>
            <returns>
            A <see cref="T:MetaStock.DataAPI.ICurrencyCollection"/> that contains the currency information.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.BeginGetCurrencies(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get currency information.
            </summary>
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.
            </returns>
            <remarks>
            The BeginGetCurrencies method starts an asynchronous request for currency information.
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.SnapshotService.SnapshotService.EndGetCurrencies(System.IAsyncResult)"/> method to return the actual <see cref="T:MetaStock.DataAPI.ICurrencyCollection"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.EndGetCurrencies(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request for currency information.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>
            &gt;A <see cref="T:MetaStock.DataAPI.ICurrencyCollection"/> that contains the requested data.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.GetUnits">
            <summary>
            Gets a collection of unit information.
            </summary>
            <returns>
            A <see cref="T:MetaStock.DataAPI.IUnitCollection"/> that contains the unit information.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.BeginGetUnits(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get unit information.
            </summary>
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.
            </returns>
            <remarks>
            The BeginGetUnits method starts an asynchronous request for unit information.
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.SnapshotService.SnapshotService.EndGetUnits(System.IAsyncResult)"/> method to return the actual <see cref="T:MetaStock.DataAPI.IUnitCollection"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.EndGetUnits(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request for unit information.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>
            &gt;A <see cref="T:MetaStock.DataAPI.IUnitCollection"/> that contains the requested data.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.GetTimeZones">
            <summary>
            Gets a collection of time zone information.
            </summary>
            <returns>
            A <see cref="T:MetaStock.DataAPI.ITimeZoneCollection"/> that contains the time zone information.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.BeginGetTimeZones(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get time zone information.
            </summary>
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.
            </returns>
            <remarks>
            The BeginGetTimeZones method starts an asynchronous request for time zone information.
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.SnapshotService.SnapshotService.EndGetTimeZones(System.IAsyncResult)"/> method to return the actual <see cref="T:MetaStock.DataAPI.ITimeZoneCollection"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.EndGetTimeZones(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request for time zone information.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>
            &gt;A <see cref="T:MetaStock.DataAPI.ITimeZoneCollection"/> that contains the requested data.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.GetExchanges">
            <summary>
            Gets a collection of exchange information.
            </summary>
            <returns>
            A <see cref="T:MetaStock.DataAPI.IExchangeCollection"/> that contains the exchange information.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.BeginGetExchanges(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get exchange information.
            </summary>
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.
            </returns>
            <remarks>
            The BeginGetExchanges method starts an asynchronous request for time zone information.
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.SnapshotService.SnapshotService.EndGetExchanges(System.IAsyncResult)"/> method to return the actual <see cref="T:MetaStock.DataAPI.IExchangeCollection"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.EndGetExchanges(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request for exchange information.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>
            &gt;A <see cref="T:MetaStock.DataAPI.IExchangeCollection"/> that contains the requested data.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.GetOptionList(MetaStock.DataAPI.IOptionListRequest)">
            <summary>
            Gets an option list for a symbol.
            </summary>
            <returns>
            A <see cref="T:MetaStock.DataAPI.IOptionListResponse"/> that contains the option list information.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.BeginGetOptionList(MetaStock.DataAPI.IOptionListRequest,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get option list information.
            </summary>
            <param name="request">The request parameters.</param>
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.
            </returns>
            <remarks>
            The BeginGetExchanges method starts an asynchronous request for option list information.
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.SnapshotService.SnapshotService.EndGetOptionList(System.IAsyncResult)"/> method to return the actual <see cref="T:MetaStock.DataAPI.IOptionListResponse"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.EndGetOptionList(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request for option list information.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>
            <see cref="T:MetaStock.DataAPI.IOptionItemCollection"/> that contains the requested data.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.GetOptionExpiryDates(MetaStock.DataAPI.IOptionExpiryDateRequest)">
            <summary>
            Gets the option expiry dates.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.BeginGetOptionExpiryDates(MetaStock.DataAPI.IOptionExpiryDateRequest,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get a list of option expiry dates for a symbol.
            </summary>
            <param name="request">The request parameters.</param>
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.
            </returns>
            <remarks>
            The BeginGetExchanges method starts an asynchronous request for the option expiry date list.
            The asynchronous requestCallback method uses the <see cref="M:MetaStock.DataAPI.SnapshotService.SnapshotService.EndGetOptionList(System.IAsyncResult)"/> method to return the actual <see cref="T:MetaStock.DataAPI.IOptionExpiryDateCollection"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.EndGetOptionExpiryDates(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request a list of option expiry dates for a symbol.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>
            A <see cref="T:MetaStock.DataAPI.IOptionListResponse"/> that contains the requested data.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.BeginGetQoS(MetaStock.DataAPI.IQoSRequest,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request to get quality of service information for the given symbol.
            </summary>
            <param name="request">The request parameters.</param>
            <param name="requestCallback">The <see cref="T:System.AsyncCallback"/> delegate.</param>
            <param name="stateObject">The state object for this request.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that references the asynchronous request for a response.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
            <remarks>
            The BeginGetQoS method starts an asynchronous request for the quality of service information.
            The asynchronous requestCallback method uses the 
            <see cref="M:MetaStock.DataAPI.SnapshotService.SnapshotService.EndGetQoS(System.IAsyncResult)"/> method to return the actual 
            <see cref="T:MetaStock.DataAPI.IQoSResponse"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.EndGetQoS(System.IAsyncResult)">
            <summary>
            Ends an asynchronous request to get quality of service information for the given symbol.
            </summary>
            <param name="ar">The pending request for a response.</param>
            <returns>
            A <see cref="T:MetaStock.DataAPI.IQoSResponse"/> that contains the requested data.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:MetaStock.DataAPI.SnapshotService.SnapshotService.BeginRequest(System.Func{System.IAsyncResult})">
            <summary>
            Implementation for all BeginXXX methods, that will let the _timeoutManager know
            that a new request has begun.
            </summary>
            <param name="beginFunc">A function that calls the actual begin method.</param>        
        </member>
        <member name="T:MetaStock.DataAPI.MarketSector">
            <summary>
            Instrument market sector types.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.MarketSector.Forex">
            <summary>
            Foreign exchange.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.MarketSector.MoneyMarkets">
            <summary>
            Money markets.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.MarketSector.TreasuryDebt">
            <summary>
            Treasury debt.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.MarketSector.SovereignDebt">
            <summary>
            Sovereign debt.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.MarketSector.MortgageDebt">
            <summary>
            Mortgage debt.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.MarketSector.CorporateDebt">
            <summary>
            Corporate debt.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.MarketSector.Equity">
            <summary>
            Equities.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.MarketSector.EquityLink">
            <summary>
            Equity-link
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.MarketSector.Energy">
            <summary>
            Energy.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.MarketSector.CommoditySofts">
            <summary>
            Soft commodities.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.MarketSector.CommodityBaseMetals">
            <summary>
            Base metals.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.MarketSector.CommodityPreciousMetals">
            <summary>
            Precious Metals.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.MarketSector.CommodityGrainAndOilseeds">
            <summary>
            Grain and oilseeds.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.MarketSector.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.INAValues">
            <summary>
            Defines NA values for all types as well as methods to query whether a value is NA.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.INAValues.IsDoubleNA(System.Double)">
            <summary>
            Determines whether the specified double value is NA.
            </summary>
            <param name="value">The value.</param>
            <returns>
              <c>true</c> if the specified value is NA; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.INAValues.IsInt32NA(System.Int32)">
            <summary>
            Determines whether the specified Int32 value is NA.
            </summary>
            <param name="value">The value.</param>
            <returns>
              <c>true</c> if the specified value is NA; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.INAValues.IsDateTimeNA(System.DateTime)">
            <summary>
            Determines whether the specified DateTime value is NA.
            </summary>
            <param name="value">The value.</param>
            <returns>
              <c>true</c> if the specified value is NA; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.INAValues.IsStringNA(System.String)">
            <summary>
            Determines whether the specified String value is NA.
            </summary>
            <param name="value">The value.</param>
            <returns>
              <c>true</c> if the specified value is NA; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.INAValues.IsTimeSpanNA(System.TimeSpan)">
            <summary>
            Determines whether the specified TimeSpan value is NA.
            </summary>
            <param name="value">The value.</param>
            <returns>
              <c>true</c> if the specified value is NA; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.INAValues.IsInt64NA(System.Int64)">
            <summary>
            Determines whether the specified Int64 value is NA.
            </summary>
            <param name="value">The value.</param>
            <returns>
              <c>true</c> if the specified value is NA; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.INAValues.Double">
            <summary>
            Gets the NA value for the double type.
            </summary>
            <value>
            The NA value
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.INAValues.Int32">
            <summary>
            Gets the NA value for the Int32 type.
            </summary>
            <value>
            The NA value
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.INAValues.DateTime">
            <summary>
            Gets the NA value for the DateTime type.
            </summary>
            <value>
            The NA value
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.INAValues.String">
            <summary>
            Gets the NA value for the String type.
            </summary>
            <value>
            The NA value
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.INAValues.TimeSpan">
            <summary>
            Gets the NA value for the TimeSpan type.
            </summary>
            <value>
            The NA value
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.INAValues.Int64">
            <summary>
            Gets the NA value for the Int64 type.
            </summary>
            <value>
            The NA value
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.NAValues">
            <summary>
            Defines NA values for all types as well as methods to query whether a value is NA.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.NAValues.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.NAValues"/> class.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.NAValues.IsDoubleNA(System.Double)">
            <summary>
            Determines whether the specified double value is NA.
            </summary>
            <param name="value">The value.</param>
            <returns>
              <c>true</c> if the specified value is NA; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.NAValues.IsInt32NA(System.Int32)">
            <summary>
            Determines whether the specified Int32 value is NA.
            </summary>
            <param name="value">The value.</param>
            <returns>
              <c>true</c> if the specified value is NA; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.NAValues.IsDateTimeNA(System.DateTime)">
            <summary>
            Determines whether the specified DateTime value is NA.
            </summary>
            <param name="value">The value.</param>
            <returns>
              <c>true</c> if the specified value is NA; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.NAValues.IsStringNA(System.String)">
            <summary>
            Determines whether the specified String value is NA.
            </summary>
            <param name="value">The value.</param>
            <returns>
              <c>true</c> if the specified value is NA; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.NAValues.IsTimeSpanNA(System.TimeSpan)">
            <summary>
            Determines whether the specified TimeSpan value is NA.
            </summary>
            <param name="value">The value.</param>
            <returns>
              <c>true</c> if the specified value is NA; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:MetaStock.DataAPI.NAValues.IsInt64NA(System.Int64)">
            <summary>
            Determines whether the specified Int64 value is NA.
            </summary>
            <param name="value">The value.</param>
            <returns>
              <c>true</c> if the specified value is NA; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:MetaStock.DataAPI.NAValues.Instance">
            <summary>
            Gets the singleton instance.
            </summary>
            <value>
            The singleton instance.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.NAValues.Double">
            <summary>
            Gets the NA value for the double type.
            </summary>
            <value>
            The NA value
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.NAValues.Int32">
            <summary>
            Gets the NA value for the Int32 type.
            </summary>
            <value>
            The NA value
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.NAValues.DateTime">
            <summary>
            Gets the NA value for the DateTime type.
            </summary>
            <value>
            The NA value
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.NAValues.String">
            <summary>
            Gets the NA value for the String type.
            </summary>
            <value>
            The NA value
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.NAValues.TimeSpan">
            <summary>
            Gets the NA value for the TimeSpan type.
            </summary>
            <value>
            The NA value
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.NAValues.Int64">
            <summary>
            Gets the NA value for the Int64 type.
            </summary>
            <value>
            The NA value
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.COM.ObjectSafetyOptions">
            <summary>
            A DWORD representing all the options currently enabled for the interface identified by riid.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.COM.ObjectSafetyOptions.INTERFACESAFE_FOR_UNTRUSTED_CALLER">
            <summary>
            Indicates that the caller of the interface identified by riid might be untrusted.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.COM.ObjectSafetyOptions.INTERFACESAFE_FOR_UNTRUSTED_DATA">
            <summary>
            Indicates that the data passed into the interface identified by riid might be untrusted.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.COM.ObjectSafetyOptions.INTERFACE_USES_DISPEX">
            <summary>
            Indicates that the caller of the interface identified by riid knows to use IDispatchEx.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.COM.ObjectSafetyOptions.INTERFACE_USES_SECURITY_MANAGER">
            <summary>
            Indicates that the data passed into the interface identified by riid knows to use IInternetHostSecurityManager.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.IFeed">
            <summary>
            Represents information about a data feed.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IFeed.Name">
            <summary>
            Gets the feed name.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IFeed.IsAvailable">
            <summary>
            Gets the availability status of the feed.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.Feed">
            <summary>
            Represents information about a data feed.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.Feed.Name">
            <summary>
            Gets the feed name.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.Feed.IsAvailable">
            <summary>
            Gets the availability status of the feed.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.IFeedCollection">
            <summary>
            Represents the list of available feeds.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.IFeedCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.IFeedCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IFeedCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:MetaStock.DataAPI.IFeed"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:MetaStock.DataAPI.IFeed"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="T:MetaStock.DataAPI.FeedCollection">
            <summary>
            Represents the list of available feeds.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.FeedCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.FeedCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.FeedCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:MetaStock.DataAPI.IFeed"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:MetaStock.DataAPI.IFeed"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="T:MetaStock.DataAPI.IFeedDataLoadEventArgs">
            <summary>
            Provides data for the <see cref="E:MetaStock.DataAPI.IFeedSubscription.DataLoaded"/> event.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IFeedDataLoadEventArgs.Data">
            <summary>
            Gets the current feed collection.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.FeedDataLoadEventArgs">
            <summary>
            Provides data for the <see cref="E:MetaStock.DataAPI.IFeedSubscription.DataLoaded"/> event.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.FeedDataLoadEventArgs.Data">
            <summary>
            Gets the current feed collection.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.FeedDataLoadEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:MetaStock.DataAPI.IFeedSubscription.DataLoaded"/> event.
            </summary>
            <param name="sender">The <see cref="T:MetaStock.DataAPI.IFeedSubscription"/> object that is raising the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:MetaStock.DataAPI.IInstrumentDataLoadEventArgs">
            <summary>
            Provides data for the <see cref="E:MetaStock.DataAPI.IInstrumentSubscription.DataLoaded"/> event.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IInstrumentDataLoadEventArgs.Data">
            <summary>
            Gets the instrument metadata.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.InstrumentDataLoadEventArgs">
            <summary>
            Provides data for the <see cref="E:MetaStock.DataAPI.IInstrumentSubscription.DataLoaded"/> event.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.InstrumentDataLoadEventArgs.Data">
            <summary>
            Gets the instrument metadata.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.InstrumentDataLoadEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:MetaStock.DataAPI.IInstrumentSubscription.DataLoaded"/> event.
            </summary>
            <param name="sender">The <see cref="T:MetaStock.DataAPI.IInstrumentSubscription"/> object that is raising the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:MetaStock.DataAPI.IInstrument">
            <summary>
            Instrument metadata returned from a <see cref="T:MetaStock.DataAPI.IInstrumentSubscription"/> subscription.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IInstrument.Name">
            <summary>
            Gets the instrument long name.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IInstrument.Currency">
            <summary>
            Gets the currency code of the currency that this instrument trades in.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IInstrument.Exchange">
            <summary>
            Gets the exchange code of the exchange that this instrument trades on.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IInstrument.TimeZone">
            <summary>
            Gets the time zone code of the time zone of this instrument.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IInstrument.Holidays">
            <summary>
            Gets the holidays for this instrument.
            </summary>
            <value>
            The holidays.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IInstrument.Notes">
            <summary>
            Gets the supplementary notes for the instrument.
            </summary>
            <value>
            The notes.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IInstrument.UnitId">
            <summary>
            Gets the unit id of the unit that this instrument's data is in.
            </summary>
            <value>
            The unit id.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IInstrument.LocalName">
            <summary>
            Gets the local name of this instrument.
            </summary>
            <value>
            The local name of the instrument.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IInstrument.UnitConversions">
            <summary>
            Gets the unit conversion factors that are available for converting between different units.
            </summary>
            <value>
            The unit conversion factors.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IInstrument.MaturityDate">
            <summary>
            Gets the maturity date.
            </summary>
            <value>
            The maturity date.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IInstrument.ExpiryDate">
            <summary>
            Gets the expiry date.
            </summary>
            <value>
            The expiry date.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IInstrument.InstrumentType">
            <summary>
            Gets the type of the instrument.
            </summary>
            <value>
            The type of the instrument.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IInstrument.MarketSector">
            <summary>
            Gets the market sector of the instrument.
            </summary>
            <value>
            The market sector.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IInstrument.LocalLanguageId">
            <summary>
            Local language ID (LCID) for the instrument.
            </summary>
            <value>
            The local language id.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IInstrument.EconomicData">
            <summary>
            Gets the economic data for an economic instrument.
            </summary>
            <value>
            The economic data.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IInstrument.TradeSessionSegments">
            <summary>
            Gets the trade session segments.
            </summary>
            <value>
            The trade session segments.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IInstrument.Views">
            <summary>
            Gets the collection of available views.
            </summary>
            <value>
            The view collection.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.Instrument">
            <summary>
            Instrument metadata returned from a <see cref="T:MetaStock.DataAPI.IInstrumentSubscription"/> subscription.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.Instrument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.Instrument"/> class.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.Instrument.Name">
            <summary>
            Gets the instrument long name.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.Instrument.Currency">
            <summary>
            Gets the currency code of the currency that this instrument trades in.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.Instrument.Exchange">
            <summary>
            Gets the exchange code of the exchange that this instrument trades on.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.Instrument.TimeZone">
            <summary>
            Gets the time zone code of the time zone of this instrument.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.Instrument.Holidays">
            <summary>
            Gets the holidays for this instrument.
            </summary>
            <value>
            The holidays.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.Instrument.Notes">
            <summary>
            Gets the supplementary notes for the instrument.
            </summary>
            <value>
            The notes.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.Instrument.UnitId">
            <summary>
            Gets the unit id of the unit that this instrument's data is in.
            </summary>
            <value>
            The unit id.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.Instrument.LocalName">
            <summary>
            Gets the local name of this instrument.
            </summary>
            <value>
            The local name of the instrument.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.Instrument.UnitConversions">
            <summary>
            Gets the unit conversion factors that are available for converting between different units.
            </summary>
            <value>
            The unit conversion factors.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.Instrument.MaturityDate">
            <summary>
            Gets the maturity date.
            </summary>
            <value>
            The maturity date.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.Instrument.ExpiryDate">
            <summary>
            Gets the expiry date.
            </summary>
            <value>
            The expiry date.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.Instrument.InstrumentType">
            <summary>
            Gets the type of the instrument.
            </summary>
            <value>
            The type of the instrument.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.Instrument.MarketSector">
            <summary>
            Gets the market sector of the instrument.
            </summary>
            <value>
            The market sector.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.Instrument.LocalLanguageId">
            <summary>
            Local language ID (LCID) for the instrument.
            </summary>
            <value>
            The local language id.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.Instrument.EconomicData">
            <summary>
            Gets the economic data for an economic instrument.
            </summary>
            <value>
            The economic data.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.Instrument.TradeSessionSegments">
            <summary>
            Gets the trade session segments.
            </summary>
            <value>
            The trade session segments.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.Instrument.Views">
            <summary>
            Gets the collection of available views.
            </summary>
            <value>
            The view collection.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.IInstrumentRequest">
            <summary>
            Request parameters for requesting instrument metadata.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IInstrumentRequest.Symbol">
            <summary>
            Gets or sets the symbol.
            </summary>
            <value>
            The symbol.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IInstrumentRequest.Feed">
            <summary>
            Gets or sets the feed.
            </summary>
            <value>
            The feed.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.InstrumentRequest">
            <summary>
            Request parameters for requesting instrument metadata.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.InstrumentRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.InstrumentRequest"/> class.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.InstrumentRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.InstrumentRequest"/> class.
            </summary>
            <param name="symbol">The symbol.</param>
        </member>
        <member name="P:MetaStock.DataAPI.InstrumentRequest.Symbol">
            <summary>
            Gets or sets the symbol.
            </summary>
            <value>
            The symbol.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.InstrumentRequest.Feed">
            <summary>
            Gets or sets the feed.
            </summary>
            <value>
            The feed.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.IntervalType">
            <summary>
            Interval types.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.IntervalType.Tick">
            <summary>
            Tick interval.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.IntervalType.Minute">
            <summary>
            Minute interval.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.IntervalType.Daily">
            <summary>
            Daily interval.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.IntervalType.Weekly">
            <summary>
            Weekly interval.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.IntervalType.Monthly">
            <summary>
            Monthly interval.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.IntervalType.Quarterly">
            <summary>
            Quarterly interval.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.IntervalType.Yearly">
            <summary>
            Yearly interval.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.IInterval">
            <summary>
            A time series interval that determines how the requested data is summarized.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.IInterval.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>        
        </member>
        <member name="P:MetaStock.DataAPI.IInterval.IntervalType">
            <summary>
            Gets or sets the type of the interval.
            </summary>
            <value>
            The type of the interval.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IInterval.Multiplier">
            <summary>
            Gets or sets the multiplier.
            </summary>
            <value>
            The multiplier.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.Interval">
            <summary>
            A time series interval that determines how the requested data is summarized.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.Interval.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.Interval"/> class.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.Interval.#ctor(MetaStock.DataAPI.IntervalType,System.UInt16)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.Interval"/> class.
            </summary>
            <param name="interval">The interval type.</param>
            <param name="multiplier">The multiplier.</param>
        </member>
        <member name="M:MetaStock.DataAPI.Interval.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>        
        </member>
        <member name="M:MetaStock.DataAPI.Interval.CompareTo(MetaStock.DataAPI.IInterval)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings:
            Value
            Meaning
            Less than zero
            This object is less than the <paramref name="other" /> parameter.
            Zero
            This object is equal to <paramref name="other" />.
            Greater than zero
            This object is greater than <paramref name="other" />.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.Interval.System#IComparable#CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance is less than <paramref name="obj" />. Zero This instance is equal to <paramref name="obj" />. Greater than zero This instance is greater than <paramref name="obj" />.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.Interval.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.Interval.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.Interval.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>        
        </member>
        <member name="M:MetaStock.DataAPI.Interval.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.Interval.IntervalType">
            <summary>
            Gets or sets the type of the interval.
            </summary>
            <value>
            The type of the interval.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.Interval.Multiplier">
            <summary>
            Gets or sets the multiplier.
            </summary>
            <value>
            The multiplier.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.Interval.Tick">
            <summary>
            Gets a tick interval.
            </summary>        
        </member>
        <member name="P:MetaStock.DataAPI.Interval.OneMinute">
            <summary>
            Gets a 1 minute interval.
            </summary>        
        </member>
        <member name="P:MetaStock.DataAPI.Interval.FiveMinute">
            <summary>
            Gets a 5 minute interval.
            </summary>        
        </member>
        <member name="P:MetaStock.DataAPI.Interval.TenMinute">
            <summary>
            Gets a 10 minute interval.
            </summary>        
        </member>
        <member name="P:MetaStock.DataAPI.Interval.ThirtyMinute">
            <summary>
            Gets a 30 minute interval.
            </summary>        
        </member>
        <member name="P:MetaStock.DataAPI.Interval.Hourly">
            <summary>
            Gets a hourly interval.
            </summary>        
        </member>
        <member name="P:MetaStock.DataAPI.Interval.Daily">
            <summary>
            Gets a daily interval.
            </summary>        
        </member>
        <member name="P:MetaStock.DataAPI.Interval.Weekly">
            <summary>
            Gets a weekly interval.
            </summary>        
        </member>
        <member name="P:MetaStock.DataAPI.Interval.Monthly">
            <summary>
            Gets a monthly interval.
            </summary>        
        </member>
        <member name="P:MetaStock.DataAPI.Interval.Quarterly">
            <summary>
            Gets a quarterly interval.
            </summary>        
        </member>
        <member name="P:MetaStock.DataAPI.Interval.Yearly">
            <summary>
            Gets a yearly interval.
            </summary>        
        </member>
        <member name="P:MetaStock.DataAPI.Interval.DefaultIntervals">
            <summary>
            Gets an array containing the default intervals supported by most symbols.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.MaxPointsType">
            <summary>
            Specifies where to get the maximum point value for the request.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.MaxPointsType.Default">
            <summary>
            Use the default request limit values.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.MaxPointsType.Maximum">
            <summary>
            Use maximum request limit values.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.MaxPointsType.User">
            <summary>
            Use user specified request limit values.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.IRequestRange">
            <summary>
            Specifies the range of data to be returned. If <see cref="P:MetaStock.DataAPI.IRequestRange.StartTime"/> is specified, then data will be
            filled from <see cref="P:MetaStock.DataAPI.IRequestRange.StartTime"/> forward; otherwise, data will be filled from <see cref="P:MetaStock.DataAPI.IRequestRange.EndTime"/> back.    
            </summary>
            <remarks>
            Note that if <see cref="P:MetaStock.DataAPI.IRequestRange.StartTime"/> is specified and <see cref="P:MetaStock.DataAPI.IRequestRange.EndTime"/> is null, it is possible to get a
            result back that does not contain the full range of data because of maximum point limits. If this is not a 
            snapshot request, then real-time updates will be sent leaving a gap in the data. This can be avoided by either
            setting <see cref="P:MetaStock.DataAPI.ITimeSeriesRequest.IsSnapshot"/> to true or by setting <see cref="P:MetaStock.DataAPI.IRequestRange.MaxPointsMode"/> to 
            <see cref="F:MetaStock.DataAPI.MaxPointsType.Maximum"/>.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.IRequestRange.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.IRequestRange.MaxPointsMode">
            <summary>
            Gets or sets the max points mode.
            </summary>
            <value>
            The max points mode.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IRequestRange.StartTime">
            <summary>
            Gets or sets the start time that determines the minimum date time value
            to be returned. If null, then no minimum value is specified and the last n 
            points prior to <see cref="P:MetaStock.DataAPI.IRequestRange.EndTime"/> are returned.
            </summary>
            <value>
            The start time.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IRequestRange.EndTime">
            <summary>
            Gets or sets the end time that determines the maximum date time value to be returned. If null, the
            end time is considered to be the most recent data. 
            </summary>
            <value>
            The end time.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IRequestRange.MaxPoints">
            <summary>
            Gets or sets the maximum number for points value that is used if <see cref="P:MetaStock.DataAPI.IRequestRange.MaxPointsMode"/> is
            <see cref="F:MetaStock.DataAPI.MaxPointsType.User"/>. If this value exceeds the maximum limits for the requested interval,
            then the defined maximum value will be used.
            </summary>
            <value>
            The maximum number of points to retrieve.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.RequestRange">
            <summary>
            Specifies the range of data to be returned.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.RequestRange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.RequestRange"/> class.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.RequestRange.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.RequestRange.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.RequestRange.MaxPointsMode">
            <summary>
            Gets or sets the max points mode.
            </summary>
            <value>
            The max points mode.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.RequestRange.StartTime">
            <summary>
            Gets or sets the start time that determines the minimum date time value
            to be returned. If null, then no minimum value is specified and the last n
            points prior to <see cref="P:MetaStock.DataAPI.RequestRange.EndTime"/> are returned.
            </summary>
            <value>
            The start time.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.RequestRange.EndTime">
            <summary>
            Gets or sets the end time that determines the maximum date time value to be returned. If null, the
            end time is considered to be the most recent data.
            </summary>
            <value>
            The end time.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.RequestRange.MaxPoints">
            <summary>
            Gets or sets the maximum number for points value that is used if <see cref="P:MetaStock.DataAPI.RequestRange.MaxPointsMode"/> is
            <see cref="F:MetaStock.DataAPI.MaxPointsType.User"/>. If this value exceeds the maximum limits for the requested interval,
            then the defined maximum value will be used.
            </summary>
            <value>
            The maximum number of points to retrieve.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.IRequestDateTime">
            <summary>
            Structure that represents a date time along with associated time zone.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.IRequestDateTime.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.IRequestDateTime.IsDateValid">
            <summary>
            Gets or sets a value indicating whether the date portion of <see cref="P:MetaStock.DataAPI.IRequestDateTime.Value"/>
            is used. If false, then today's date is used.
            </summary>
            <value>
            <c>true</c> if the date portion of <see cref="P:MetaStock.DataAPI.IRequestDateTime.Value"/> is used; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IRequestDateTime.IsTimeValid">
            <summary>
            Gets or sets a value indicating whether the time portion of <see cref="P:MetaStock.DataAPI.IRequestDateTime.Value"/> 
            is used. If false, then the open time of the instrument is used.
            </summary>
            <value>
            <c>true</c> if the time portion of <see cref="P:MetaStock.DataAPI.IRequestDateTime.Value"/> is used; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IRequestDateTime.Value">
            <summary>
            Gets or sets the DateTime value.
            </summary>
            <value>
            The DateTime value.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IRequestDateTime.TimeZone">
            <summary>
            Gets or sets the time zone that <see cref="P:MetaStock.DataAPI.IRequestDateTime.Value"/> is specified in.
            </summary>
            <value>
            The time zone.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.RequestTime">
            <summary>
            Structure that represents a date time along with associated time zone.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.RequestTime.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.RequestTime"/> class.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.RequestTime.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.RequestTime.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.RequestTime.Value">
            <summary>
            Gets or sets the DateTime value.
            </summary>
            <value>
            The DateTime value.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.RequestTime.TimeZone">
            <summary>
            Gets or sets the time zone that <see cref="P:MetaStock.DataAPI.RequestTime.Value"/> is specified in.
            </summary>
            <value>
            The time zone.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.RequestTime.IsDateValid">
            <summary>
            Gets or sets a value indicating whether the date portion of <see cref="P:MetaStock.DataAPI.RequestTime.Value"/>
            is used. If false, then today's date is used.
            </summary>
            <value>
            <c>true</c> if the date portion of <see cref="P:MetaStock.DataAPI.RequestTime.Value"/> is used; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.RequestTime.IsTimeValid">
            <summary>
            Gets or sets a value indicating whether the time portion of <see cref="P:MetaStock.DataAPI.RequestTime.Value"/>
            is used. If false, then the open time of the instrument is used.
            </summary>
            <value>
            <c>true</c> if the time portion of <see cref="P:MetaStock.DataAPI.RequestTime.Value"/> is used; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.SnapshotService.SnapshotTimeoutManager">
            <summary>
            Manages a timer for periodically checking for subscriptions that have timed out.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.SubscriptionService.SubscriptionService">
            <summary>
            <see cref="T:MetaStock.DataAPI.ISubscriptionService"/> implementation. Creates and wires up all subscription types.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.SubscriptionStateChangedHandler">
            <summary>
            Represents the method that handles a subscription state change events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:MetaStock.DataAPI.ISubscriptionStateChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:MetaStock.DataAPI.ISubscriptionStateChangedEventArgs">
            <summary>
            Provides data for the subscription state changed events.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.ISubscriptionStateChangedEventArgs.State">
            <summary>
            Gets the updated subscription state.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.ISubscriptionStateChangedEventArgs.Exception">
            <summary>
            Gets error information if <see cref="P:MetaStock.DataAPI.ISubscriptionStateChangedEventArgs.State"/> is <see cref="F:MetaStock.DataAPI.SubscriptionState.Error"/>.
            </summary>        
        </member>
        <member name="T:MetaStock.DataAPI.SubscriptionStateChangedEventArgs">
            <summary>
            Provides data for the subscription state changed events.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.SubscriptionStateChangedEventArgs.State">
            <summary>
            Gets the updated subscription state.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.SubscriptionStateChangedEventArgs.Exception">
            <summary>
            Gets error information if <see cref="P:MetaStock.DataAPI.SubscriptionStateChangedEventArgs.State"/> is <see cref="F:MetaStock.DataAPI.SubscriptionState.Error"/>.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.SubscriptionState">
            <summary>
            Subscription State.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.SubscriptionState.Initial">
            <summary>
            Subscription has not been initiated.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.SubscriptionState.Pending">
            <summary>
            Subscription has been initiated. Waiting for <see cref="T:MetaStock.DataAPI.TimeSeriesDataManager"/> to finish connecting.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.SubscriptionState.Requesting">
            <summary>
            Subscription request has been sent.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.SubscriptionState.Loading">
            <summary>
            Receiving initial data load.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.SubscriptionState.Connected">
            <summary>
            Initial data load is complete. Subscription remains active and will fire additional data load events when data is updated.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.SubscriptionState.Closed">
            <summary>
            The subscription has been closed.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.SubscriptionState.Error">
            <summary>
            An error occurred.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.ITimeSeriesChunk">
            <summary>
            Represents a fragment of time series data.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.ITimeSeriesChunk.GetDateVariant">
            <summary>
            Gets an array of DateTime values as a safe array of variants that represent the Date column of time series data.
            </summary>
            <remarks>
            Only needed by COM clients that can not handle a safe array of DATE
            </remarks>
            <returns>        
            An array of DateTime values as a safe array of variants.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.ITimeSeriesChunk.GetOpenVariant">
            <summary>
            Gets an array of values as a safe array of variants that represent the Open column of time series data.
            </summary>
            <remarks>
            Only needed by COM clients that can not handle a safe array of double
            </remarks>
            <returns>        
            An array of double values as a safe array of variants.        
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.ITimeSeriesChunk.GetHighVariant">
            <summary>
            Gets an array of values as a safe array of variants that represent the High column of time series data.
            </summary>
            <remarks>
            Only needed by COM clients that can not handle a safe array of double
            </remarks>
            <returns>        
            An array of double values as a safe array of variants.        
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.ITimeSeriesChunk.GetLowVariant">
            <summary>
            Gets an array of values as a safe array of variants that represent the Low column of time series data.
            </summary>
            <remarks>
            Only needed by COM clients that can not handle a safe array of double
            </remarks>
            <returns>        
            An array of double values as a safe array of variants.        
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.ITimeSeriesChunk.GetLastVariant">
            <summary>
            Gets an array of values as a safe array of variants that represent the Last column of time series data.
            </summary>
            <remarks>
            Only needed by COM clients that can not handle a safe array of double
            </remarks>
            <returns>        
            An array of double values as a safe array of variants.        
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.ITimeSeriesChunk.GetVolumeVariant">
            <summary>
            Gets an array of values as a safe array of variants that represent the Volume column of time series data.
            </summary>
            <remarks>
            Only needed by COM clients that can not handle a safe array of double
            </remarks>
            <returns>        
            An array of double values as a safe array of variants.        
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.ITimeSeriesChunk.ApplyUpdate(MetaStock.DataAPI.ITimeSeriesUpdate,MetaStock.DataAPI.ITimeSeriesChunk@)">
            <summary>
            Updates the time series data with the given update row.
            </summary>
            <param name="update">
            The time series update row to be applied to this data chunk.
            </param>
            <param name="next">
            A new <see cref="T:MetaStock.DataAPI.ITimeSeriesChunk"/> that is allocated if the 
            update is an append that exceeds the capacity of this chunk.
            </param>
            <returns>true if a new chunk is allocated, otherwise false.</returns>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesChunk.Capacity">
            <summary>
            Gets the maximum number of elements that can be stored in this chunk.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesChunk.Count">
            <summary>
            Gets the number of elements contained in this chunk.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesChunk.Facts">
            <summary>
            Gets the facts that determine which columns will be non-null.
            </summary>
            <value>
            The facts flags.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesChunk.Date">
            <summary>
            Gets an array of DateTime values that represent the Date column of time series data.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesChunk.Open">
            <summary>
            Gets an array of values that represent the Open column of time series data.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesChunk.High">
            <summary>
            Gets an array of values that represent the High column of time series data.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesChunk.Low">
            <summary>
            Gets an array of values that represent the Low column of time series data.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesChunk.Last">
            <summary>
            Gets an array of values that represent the Last column of time series data.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesChunk.Volume">
            <summary>
            Gets an array of values that represent the Volume column of time series data.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.TimeSeriesChunk">
            <summary>
            Represents a fragment of time series data.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.TimeSeriesChunk.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.TimeSeriesChunk"/> class.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.TimeSeriesChunk.#ctor(MetaStock.DataAPI.TimeSeriesFact)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.TimeSeriesChunk"/> class.
            </summary>
            <param name="facts">The facts.</param>
        </member>
        <member name="M:MetaStock.DataAPI.TimeSeriesChunk.ApplyUpdate(MetaStock.DataAPI.ITimeSeriesUpdate,MetaStock.DataAPI.ITimeSeriesChunk@)">
            <summary>
            Updates the time series data with the given update row.
            </summary>
            <param name="update">The time series update row to be applied to this data chunk.</param>
            <param name="next">A new <see cref="T:MetaStock.DataAPI.ITimeSeriesChunk"/> that is allocated if the
            update is an append that exceeds the capacity of this chunk.</param>
            <returns>
            true if a new chunk is allocated, otherwise false.
            </returns>        
        </member>
        <member name="M:MetaStock.DataAPI.TimeSeriesChunk.GetDateVariant">
            <summary>
            Gets an array of DateTime values as a safe array of variants that represent the Date column of time series data.
            </summary>
            <returns>
            An array of DateTime values as a safe array of variants.
            </returns>
            <remarks>
            Only needed by COM clients that can not handle a safe array of DATE
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.TimeSeriesChunk.GetOpenVariant">
            <summary>
            Gets an array of values as a safe array of variants that represent the Open column of time series data.
            </summary>
            <returns>
            An array of double values as a safe array of variants.
            </returns>
            <remarks>
            Only needed by COM clients that can not handle a safe array of double
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.TimeSeriesChunk.GetHighVariant">
            <summary>
            Gets an array of values as a safe array of variants that represent the High column of time series data.
            </summary>
            <returns>
            An array of double values as a safe array of variants.
            </returns>
            <remarks>
            Only needed by COM clients that can not handle a safe array of double
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.TimeSeriesChunk.GetLowVariant">
            <summary>
            Gets an array of values as a safe array of variants that represent the Low column of time series data.
            </summary>
            <returns>
            An array of double values as a safe array of variants.
            </returns>
            <remarks>
            Only needed by COM clients that can not handle a safe array of double
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.TimeSeriesChunk.GetLastVariant">
            <summary>
            Gets an array of values as a safe array of variants that represent the Last column of time series data.
            </summary>
            <returns>
            An array of double values as a safe array of variants.
            </returns>
            <remarks>
            Only needed by COM clients that can not handle a safe array of double
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.TimeSeriesChunk.GetVolumeVariant">
            <summary>
            Gets an array of values as a safe array of variants that represent the Volume column of time series data.
            </summary>
            <returns>
            An array of double values as a safe array of variants.
            </returns>
            <remarks>
            Only needed by COM clients that can not handle a safe array of double
            </remarks>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesChunk.Count">
            <summary>
            Gets the number of elements contained in this chunk.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesChunk.Capacity">
            <summary>
            Gets the maximum number of elements that can be stored in this chunk.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesChunk.Facts">
            <summary>
            Gets the facts that determine which columns will be non-null.
            </summary>
            <value>
            The facts flags.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesChunk.Date">
            <summary>
            Gets an array of DateTime values that represent the Date column of time series data.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesChunk.Open">
            <summary>
            Gets an array of values that represent the Open column of time series data.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesChunk.High">
            <summary>
            Gets an array of values that represent the High column of time series data.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesChunk.Low">
            <summary>
            Gets an array of values that represent the Low column of time series data.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesChunk.Last">
            <summary>
            Gets an array of values that represent the Last column of time series data.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesChunk.Volume">
            <summary>
            Gets an array of values that represent the Volume column of time series data.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.ITimeSeriesDataLoadEventArgs">
            <summary>
            Provides data for the <see cref="E:MetaStock.DataAPI.ITimeSeriesSubscription.DataLoaded"/> event.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesDataLoadEventArgs.EventType">
            <summary>
            Gets the event type. If the event type is <see cref="F:MetaStock.DataAPI.TimeSeriesDataLoadEventType.DataLoad"/>
            then <see cref="P:MetaStock.DataAPI.ITimeSeriesDataLoadEventArgs.Data"/> is populated. If the event type is <see cref="F:MetaStock.DataAPI.TimeSeriesDataLoadEventType.Updates"/>
            then <see cref="P:MetaStock.DataAPI.ITimeSeriesDataLoadEventArgs.Updates"/> is populated.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesDataLoadEventArgs.Data">
            <summary>
            Gets the time series data.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesDataLoadEventArgs.Updates">
            <summary>
            Gets time series updates.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.TimeSeriesDataLoadEventType">
            <summary>
            Specifies the type of update contained in <see cref="T:MetaStock.DataAPI.ITimeSeriesDataLoadEventArgs"/>.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.TimeSeriesDataLoadEventType.DataLoad">
            <summary>
            Used to specify that the data update is a <see cref="T:MetaStock.DataAPI.ITimeSeriesChunk"/>.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.TimeSeriesDataLoadEventType.Updates">
            <summary>
            Used to specify that the data update is a <see cref="T:MetaStock.DataAPI.ITimeSeriesUpdateCollection"/>.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.TimeSeriesDataLoadEventArgs">
            <summary>
            Provides data for the <see cref="E:MetaStock.DataAPI.ITimeSeriesSubscription.DataLoaded"/> event.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesDataLoadEventArgs.EventType">
            <summary>
            Gets the event type. If the event type is <see cref="F:MetaStock.DataAPI.TimeSeriesDataLoadEventType.DataLoad"/>
            then <see cref="P:MetaStock.DataAPI.TimeSeriesDataLoadEventArgs.Data"/> is populated. If the event type is <see cref="F:MetaStock.DataAPI.TimeSeriesDataLoadEventType.Updates"/>
            then <see cref="P:MetaStock.DataAPI.TimeSeriesDataLoadEventArgs.Updates"/> is populated.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesDataLoadEventArgs.Data">
            <summary>
            Gets the time series data.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesDataLoadEventArgs.Updates">
            <summary>
            Gets time series updates.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.ITimeSeriesDataManagerEvents">
            <summary>
            Event interface for providing <see cref="E:MetaStock.DataAPI.ITimeSeriesDataManager.StateChanged"/> events to COM clients.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.ITimeSeriesDataManagerEvents.StateChanged(System.Object,MetaStock.DataAPI.IDataManagerStateChangedArgs)">
            <summary>
            Called when the <see cref="E:MetaStock.DataAPI.ITimeSeriesDataManager.StateChanged"/> event has occurred.
            </summary>
            <param name="sender">The <see cref="T:MetaStock.DataAPI.ITimeSeriesDataManager"/> object that is raising the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:MetaStock.DataAPI.TimeSeriesDataManager">
            <summary>
            Top level object used to initialize/shutdown the time series API module. Provides
            access to snapshot and subscription interfaces for retrieving data.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.TimeSeriesDataManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.TimeSeriesDataManager"/> class.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.TimeSeriesDataManager.Connect(MetaStock.DataAPI.IDataAPIConfiguration)">
            <summary>
            Establishes a connection to the time series data provider.        
            The status of the connection can be monitored through the <see cref="E:MetaStock.DataAPI.TimeSeriesDataManager.StateChanged"/>
            event.
            </summary>
            <param name="configuration">Specifies global configuration parameters to be used.</param>
        </member>
        <member name="M:MetaStock.DataAPI.TimeSeriesDataManager.Close">
            <summary>
            Closes the connection with the time series data provider. All open subscriptions
            will be closed. Close must be called before application shutdown to ensure a clean shutdown
            sequence.
            </summary>
        </member>
        <member name="E:MetaStock.DataAPI.TimeSeriesDataManager.StateChanged">
            <summary>
            Occurs when the <see cref="P:MetaStock.DataAPI.TimeSeriesDataManager.State"/> property has changed.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesDataManager.State">
            <summary>
            Gets the current state
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesDataManager.DataProviderException">
            <summary>
            Returns error information when the <see cref="P:MetaStock.DataAPI.TimeSeriesDataManager.State"/> property is <see cref="F:MetaStock.DataAPI.DataManagerState.Error"/>.
            Will be null if not in an error state.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesDataManager.SnapshotService">
            <summary>
            Gets the snapshot service.
            </summary>
            <value>
            The snapshot service interface.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesDataManager.SubscriptionService">
            <summary>
            Gets the subscription service.
            </summary>
            <value>
            The subscription service.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.TimeSeriesFact">
            <summary>
            Flags that specify which facts to request. 
            Facts correspond to columns in the time series data.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.TimeSeriesFact.Open">
            <summary>
            Request the OPEN fact.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.TimeSeriesFact.High">
            <summary>
            Request the HIGH fact.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.TimeSeriesFact.Low">
            <summary>
            Request the LOW fact.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.TimeSeriesFact.Last">
            <summary>
            Request the CLOSE fact. 
            If CLOSE is not available then VALUE will be requested.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.TimeSeriesFact.Volume">
            <summary>
            Request the VOLUME fact.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.TimeSeriesFact.All">
            <summary>
            Request all facts.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.SubscriptionService.TimeSeriesSubscriptionTranslateDataProvider">
            <summary>
            <see cref="T:MetaStock.DataAPI.ITimeSeriesSubscription"/> object returned from <see cref="T:MetaStock.DataAPI.TimeSeriesDataManager"/>.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.TimeSeriesUpdateType">
            <summary>
            Specifies the type of time series update.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.TimeSeriesUpdateType.Update">
            <summary>
            Specifies that the update is an update to the last row of data.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.TimeSeriesUpdateType.Append">
            <summary>        
            Specifies that the update is an appended row of data.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.ITimeSeriesUpdate">
            <summary>
            Represents a row of time series data.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesUpdate.UpdateType">
            <summary>
            Gets the type of update. If set to <see cref="F:MetaStock.DataAPI.TimeSeriesUpdateType.Update"/> then the data is an update
            to the last row of data. If set to <see cref="F:MetaStock.DataAPI.TimeSeriesUpdateType.Append"/> then the data is an appended
            row.
            </summary>        
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesUpdate.Date">
            <summary>
            Gets the Date value.
            </summary>        
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesUpdate.Open">
            <summary>
            Gets the Open value.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesUpdate.High">
            <summary>
            Gets the High value.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesUpdate.Low">
            <summary>
            Gets the Low value.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesUpdate.Last">
            <summary>
            Gets the Last value.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesUpdate.Volume">
            <summary>
            Gets the Volume value.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.TimeSeriesUpdate">
            <summary>
            Represents a row of time series data.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.TimeSeriesUpdate.#ctor(MetaStock.DataAPI.TimeSeriesUpdateType,System.DateTime,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.TimeSeriesUpdate"/> class.
            </summary>
            <param name="updateType">Type of the update.</param>
            <param name="date">The date.</param>
            <param name="open">The open.</param>
            <param name="high">The high.</param>
            <param name="low">The low.</param>
            <param name="last">The last.</param>
            <param name="volume">The volume.</param>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesUpdate.UpdateType">
            <summary>
            Gets the type of update. If set to <see cref="F:MetaStock.DataAPI.TimeSeriesUpdateType.Update"/> then the data is an update
            to the last row of data. If set to <see cref="F:MetaStock.DataAPI.TimeSeriesUpdateType.Append"/> then the data is an appended
            row.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesUpdate.Date">
            <summary>
            Gets the Date value.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesUpdate.Open">
            <summary>
            Gets the Open value.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesUpdate.High">
            <summary>
            Gets the High value.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesUpdate.Low">
            <summary>
            Gets the Low value.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesUpdate.Last">
            <summary>
            Gets the Last value.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesUpdate.Volume">
            <summary>
            Gets the Volume value.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.ITimeSeriesRequest">
            <summary>
            Request parameters for requesting time series data.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.ITimeSeriesRequest.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesRequest.Feed">
            <summary>
            Gets or sets the feed.
            </summary>
            <value>
            The feed.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesRequest.Symbol">
            <summary>
            Gets or sets the symbol.
            </summary>
            <value>
            The symbol.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesRequest.Interval">
            <summary>
            Gets or sets the interval.
            </summary>
            <value>
            The interval.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesRequest.RequestRange">
            <summary>
            Gets or sets the request range.
            </summary>
            <value>
            The request range.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesRequest.View">
            <summary>
            Gets or sets the view.
            </summary>
            <value>
            The view.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesRequest.TimeZone">
            <summary>
            Gets or sets the time zone that the data is returned in.
            </summary>
            <value>
            The time zone.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesRequest.IsSnapshot">
            <summary>
            Gets or sets a value indicating whether this instance is snapshot request.
            </summary>
            <value>
            <c>true</c> if this instance is snapshot; otherwise, <c>false</c>.
            </value>
            <remarks>
            snapshot requests will return the initial data load, but will not send any updates to the data.
            </remarks>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesRequest.Facts">
            <summary>
            Gets or sets the facts to request. Facts that are not requested will result in 
            null arrays returned for that fact.
            </summary>
            <value>
            The facts to request.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.TimeSeriesRequest">
            <summary>
            Request parameters for requesting time series data.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.TimeSeriesRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.TimeSeriesRequest"/> class.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.TimeSeriesRequest.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.TimeSeriesRequest.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesRequest.Feed">
            <summary>
            Gets or sets the feed.
            </summary>
            <value>
            The feed.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesRequest.Symbol">
            <summary>
            Gets or sets the symbol.
            </summary>
            <value>
            The symbol.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesRequest.Interval">
            <summary>
            Gets or sets the interval.
            </summary>
            <value>
            The interval.
            </value>        
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesRequest.RequestRange">
            <summary>
            Gets or sets the request range.
            </summary>
            <value>
            The request range.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesRequest.View">
            <summary>
            Gets or sets the view. Null or empty specifies to use the default view.
            </summary>
            <value>
            The view.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesRequest.TimeZone">
            <summary>
            Gets or sets the time zone that the data is returned in.
            </summary>
            <value>
            The time zone.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesRequest.IsSnapshot">
            <summary>
            Gets or sets a value indicating whether this instance is snapshot request.
            </summary>
            <value>
            <c>true</c> if this instance is snapshot; otherwise, <c>false</c>.
            </value>
            <remarks>
            snapshot requests will return the initial data load, but will not send any updates to the data.
            </remarks>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesRequest.Facts">
            <summary>
            Gets or sets the facts to request. Facts that are not requested will result in 
            null arrays returned for that fact.
            </summary>
            <value>
            The facts to request.
            </value>        
        </member>
        <member name="T:MetaStock.DataAPI.TimeSeriesDataLoadEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:MetaStock.DataAPI.ITimeSeriesSubscription.DataLoaded"/> event.
            </summary>
            <param name="sender">The <see cref="T:MetaStock.DataAPI.ITimeSeriesSubscription"/> object that is raising the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:MetaStock.DataAPI.ITimeSeriesUpdateCollection">
            <summary>
            Represents a collection of updates to time series data.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.ITimeSeriesUpdateCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesUpdateCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSeriesUpdateCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:MetaStock.DataAPI.ITimeSeriesUpdate"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:MetaStock.DataAPI.ITimeSeriesUpdate"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="T:MetaStock.DataAPI.TimeSeriesUpdateCollection">
            <summary>
            Represents a collection of updates to time series data.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.TimeSeriesUpdateCollection.#ctor(System.Collections.Generic.List{MetaStock.DataAPI.ITimeSeriesUpdate})">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.TimeSeriesUpdateCollection"/> class.
            </summary>
            <param name="list">The list.</param>
        </member>
        <member name="M:MetaStock.DataAPI.TimeSeriesUpdateCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:MetaStock.DataAPI.TimeSeriesUpdateCollection.System#Collections#Generic#IEnumerable{MetaStock#DataAPI#ITimeSeriesUpdate}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesUpdateCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSeriesUpdateCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:MetaStock.DataAPI.ITimeSeriesUpdate"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:MetaStock.DataAPI.ITimeSeriesUpdate"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="T:MetaStock.DataAPI.ITimeSpanInterop">
            <summary>
            Represents a time interval in a format that can be read by COM clients 
            that can not read a <see cref="T:System.TimeSpan"/>.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSpanInterop.Hours">
            <summary>
            Gets the hours component of the time interval
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSpanInterop.Minutes">
            <summary>
            Gets the minutes component of the time interval
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeSpanInterop.Seconds">
            <summary>
            Gets the seconds component of the time interval
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.TimeSpanInterop">
            <summary>
            Represents a time interval in a format that can be read by COM clients 
            that can not read a <see cref="T:System.TimeSpan"/>.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSpanInterop.Hours">
            <summary>
            Gets the hours component of the time interval
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSpanInterop.Minutes">
            <summary>
            Gets the minutes component of the time interval
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.TimeSpanInterop.Seconds">
            <summary>
            Gets the seconds component of the time interval
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.TimeZoneType">
            <summary>
            Specifies the time zone type.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.TimeZoneType.UTC">
            <summary>
            Use UTC time zone.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.TimeZoneType.Local">
            <summary>
            Use the time zone of the instrument.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.TimeZoneType.Custom">
            <summary>
            Use the specified time zone.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.ITimeZone">
            <summary>
            Represents a time zone.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.ITimeZone.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeZone.Type">
            <summary>
            Gets or sets the type of time zone.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeZone.Code">
            <summary>
            Gets or sets the time zone code. Only used if <see cref="P:MetaStock.DataAPI.ITimeZone.Type"/> is <see cref="F:MetaStock.DataAPI.TimeZoneType.Custom"/>.
            </summary>
            <value>
            The time zone code.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.TimeZone">
            <summary>
            Represents a time zone.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.TimeZone.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.TimeZone"/> class.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.TimeZone.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>        
        </member>
        <member name="M:MetaStock.DataAPI.TimeZone.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.TimeZone.Type">
            <summary>
            Gets or sets the type of time zone.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.TimeZone.Code">
            <summary>
            Gets or sets the time zone code. Only used if <see cref="P:MetaStock.DataAPI.TimeZone.Type"/> is <see cref="F:MetaStock.DataAPI.TimeZoneType.Custom"/>.
            </summary>
            <value>
            The time zone code.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.ITimeZoneCollection">
            <summary>
            Represents a collection of time zone information
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.ITimeZoneCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeZoneCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeZoneCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:MetaStock.DataAPI.ITimeZoneInfo"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:MetaStock.DataAPI.ITimeZoneInfo"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="T:MetaStock.DataAPI.TimeZoneCollection">
            <summary>
            Represents a collection of time zone information
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.TimeZoneCollection.#ctor(MetaStock.DataAPI.ITimeZoneInfo[])">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.TimeZoneCollection"/> class.
            </summary>
            <param name="items">The items to put in the collection.</param>
        </member>
        <member name="T:MetaStock.DataAPI.ITimeZoneInfo">
            <summary>
            Represents information that describes a time zone.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeZoneInfo.ShortName">
            <summary>
            Gets the short name for the time zone.
            </summary>
            <value>
            The short name.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeZoneInfo.LongName">
            <summary>
            Gets the long name for the time zone.
            </summary>
            <value>
            The long name.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeZoneInfo.UtcOffset">
            <summary>
            Gets the UTC offset for this time zone.
            </summary>
            <value>
            The UTC offset.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeZoneInfo.HasDaylightSavingTime">
            <summary>
            Gets a value indicating whether this instance has daylight saving time.
            </summary>
            <value>
            <c>true</c> if this instance has daylight saving time; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeZoneInfo.DaylightSavingOffset">
            <summary>
            Gets the UTC offset for daylight saving time.
            </summary>
            <value>
            The UTC offset for daylight saving time.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeZoneInfo.DaylightSavingStart">
            <summary>
            Gets the date and time when daylight saving time starts.
            </summary>
            <value>
            The daylight saving start time.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ITimeZoneInfo.DaylightSavingEnd">
            <summary>
            Gets the date and time when daylight saving time ends.
            </summary>
            <value>
            The daylight saving end time.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.TimeZoneInfo">
            <summary>
            Represents information that describes a time zone.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.TimeZoneInfo.ShortName">
            <summary>
            Gets the short name for the time zone.
            </summary>
            <value>
            The short name.
            </value>        
        </member>
        <member name="P:MetaStock.DataAPI.TimeZoneInfo.LongName">
            <summary>
            Gets the long name for the time zone.
            </summary>
            <value>
            The long name.
            </value>        
        </member>
        <member name="P:MetaStock.DataAPI.TimeZoneInfo.UtcOffset">
            <summary>
            Gets the UTC offset for this time zone.
            </summary>
            <value>
            The UTC offset.
            </value>       
        </member>
        <member name="P:MetaStock.DataAPI.TimeZoneInfo.HasDaylightSavingTime">
            <summary>
            Gets a value indicating whether this instance has daylight saving time.
            </summary>
            <value>
            <c>true</c> if this instance has daylight saving time; otherwise, <c>false</c>.
            </value>        
        </member>
        <member name="P:MetaStock.DataAPI.TimeZoneInfo.DaylightSavingOffset">
            <summary>
            Gets the UTC offset for daylight saving time.
            </summary>
            <value>
            The UTC offset for daylight saving time.
            </value>        
        </member>
        <member name="P:MetaStock.DataAPI.TimeZoneInfo.DaylightSavingStart">
            <summary>
            Gets the date and time when daylight saving time starts.
            </summary>
            <value>
            The daylight saving start time.
            </value>        
        </member>
        <member name="P:MetaStock.DataAPI.TimeZoneInfo.DaylightSavingEnd">
            <summary>
            Gets the date and time when daylight saving time ends.
            </summary>
            <value>
            The daylight saving end time.
            </value>        
        </member>
        <member name="T:MetaStock.DataAPI.DayOfWeek">
            <summary>
            Represents the day of the week.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DayOfWeek.Saturday">
            <summary>
            Saturday
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DayOfWeek.Sunday">
            <summary>
            Sunday
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DayOfWeek.Monday">
            <summary>
            Monday
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DayOfWeek.Tuesday">
            <summary>
            Tuesday
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DayOfWeek.Wednesday">
            <summary>
            Wednesday
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DayOfWeek.Thursday">
            <summary>
            Thursday
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.DayOfWeek.Friday">
            <summary>
            Friday
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.ITradeSession">
            <summary>
            Represents period of time when trading is active.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.ITradeSession.StartDayOfWeek">
            <summary>
            Gets the day of week that the session opens on.
            </summary>
            <value>
            The start day of week.
            </value>        
        </member>
        <member name="P:MetaStock.DataAPI.ITradeSession.StartTime">
            <summary>
            Gets the session start time.
            </summary>
            <value>
            The session start time.
            </value>        
        </member>
        <member name="P:MetaStock.DataAPI.ITradeSession.StartTimeInterop">
            <summary>
            Gets the session start time in a format accessible by COM clients.
            </summary>        
        </member>
        <member name="P:MetaStock.DataAPI.ITradeSession.EndDayOfWeek">
            <summary>
            Gets the day of week that the session closes on.
            </summary>
            <value>
            The end day of week.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ITradeSession.EndTime">
            <summary>
            Gets the session end time.
            </summary>
            <value>
            The session end time.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ITradeSession.EndTimeInterop">
            <summary>
            Gets the session end time in a format accessible by COM clients.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.ITradeSession.TradedDay">
            <summary>
            Gets the day of the week that this session belongs to.
            </summary>
            <value>
            The traded day.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ITradeSession.TradingPhase">
            <summary>
            Gets a description of the trading phase.
            </summary>
            <value>
            The trading phase.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.TradeSession">
            <summary>
            Represents period of time when trading is active.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.TradeSession.StartDayOfWeek">
            <summary>
            Gets the day of week that the session opens on.
            </summary>
            <value>
            The start day of week.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.TradeSession.StartTime">
            <summary>
            Gets the session start time.
            </summary>
            <value>
            The session start time.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.TradeSession.StartTimeInterop">
            <summary>
            Gets the session start time in a format accessible by COM clients.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.TradeSession.EndDayOfWeek">
            <summary>
            Gets the day of week that the session closes on.
            </summary>
            <value>
            The end day of week.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.TradeSession.EndTime">
            <summary>
            Gets the session end time.
            </summary>
            <value>
            The session end time.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.TradeSession.EndTimeInterop">
            <summary>
            Gets the session end time in a format accessible by COM clients.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.TradeSession.TradedDay">
            <summary>
            Gets the day of the week that this session belongs to.
            </summary>
            <value>
            The traded day.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.TradeSession.TradingPhase">
            <summary>
            Gets a description of the trading phase.
            </summary>
            <value>
            The trading phase.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.ITradeSessionCollection">
            <summary>
            A collection of <see cref="T:MetaStock.DataAPI.ITradeSession"/>.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.ITradeSessionCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.ITradeSessionCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ITradeSessionCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:MetaStock.DataAPI.ITradeSession"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:MetaStock.DataAPI.ITradeSession"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="T:MetaStock.DataAPI.TradeSessionCollection">
            <summary>
            A collection of <see cref="T:MetaStock.DataAPI.ITradeSession"/>.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.ITradeSessionSegment">
            <summary>
            A collection of trade sessions that are active for a date range.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.ITradeSessionSegment.ValidFrom">
            <summary>
            Gets the date when the sessions became active
            </summary>
            <value>
            The valid from date.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ITradeSessionSegment.ValidTo">
            <summary>
            Gets the date when the sessions are no longer active.
            </summary>
            <value>
            The valid to date.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ITradeSessionSegment.IsSpecialTrading">
            <summary>
            Gets a value indicating whether this instance is special trading.
            </summary>
            <value>
            <c>true</c> if this instance is special trading; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ITradeSessionSegment.TimeZone">
            <summary>
            Gets the time zone that the trade sessions are specified in.
            </summary>
            <value>
            The time zone.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ITradeSessionSegment.TradeSessions">
            <summary>
            Gets the trade sessions.
            </summary>
            <value>
            The trade sessions.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.TradeSessionSegment">
            <summary>
            A collection of trade sessions that are active for a date range.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.TradeSessionSegment.ValidFrom">
            <summary>
            Gets the date when the sessions became active
            </summary>
            <value>
            The valid from date.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.TradeSessionSegment.ValidTo">
            <summary>
            Gets the date when the sessions are no longer active.
            </summary>
            <value>
            The valid to date.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.TradeSessionSegment.IsSpecialTrading">
            <summary>
            Gets a value indicating whether this instance is special trading.
            </summary>
            <value>
            <c>true</c> if this instance is special trading; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.TradeSessionSegment.TimeZone">
            <summary>
            Gets the time zone that the trade sessions are specified in.
            </summary>
            <value>
            The time zone.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.TradeSessionSegment.TradeSessions">
            <summary>
            Gets the trade sessions.
            </summary>
            <value>
            The trade sessions.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.ITradeSessionSegmentCollection">
            <summary>
            A collection of <see cref="T:MetaStock.DataAPI.ITradeSessionSegment"/>
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.ITradeSessionSegmentCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.ITradeSessionSegmentCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.ITradeSessionSegmentCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:MetaStock.DataAPI.ITradeSessionSegment"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:MetaStock.DataAPI.ITradeSessionSegment"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="T:MetaStock.DataAPI.TradeSessionSegmentCollection">
            <summary>
            A collection of <see cref="T:MetaStock.DataAPI.ITradeSessionSegment"/>
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.UnitCategory">
            <summary>
            Categorizes the type of physical quantity measured by a unit.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.UnitCategory.None">
            <summary>
            Data does not have any associated physical quantity.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.UnitCategory.Volume">
            <summary>
            A measurement of volume.
            </summary>        
        </member>
        <member name="F:MetaStock.DataAPI.UnitCategory.Weight">
            <summary>
            A measurement of weight.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.UnitCategory.Length">
            <summary>
            A measurement of length.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.UnitCategory.Energy">
            <summary>
            A measurement of energy.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.UnitCategory.CubicMeterPerDay">
            <summary>
            A measurement of cubic meters per day.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.UnitCategory.Index">
            <summary>
            A measurement that is an index.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.UnitCategory.Time">
            <summary>
            A measurement of time.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.UnitCategory.Percent">
            <summary>
            A measurement as a percentage.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.UnitCategory.Unit">
            <summary>
            A measurement of number of units.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.IUnit">
            <summary>
            Represents a unit of measurement.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IUnit.Id">
            <summary>
            Gets the id of the unit.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IUnit.Category">
            <summary>
            Gets the category.
            </summary>
            <value>
            The category.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IUnit.LongName">
            <summary>
            Gets the long name.
            </summary>
            <value>
            The long name.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IUnit.ShortName">
            <summary>
            Gets the short name.
            </summary>
            <value>
            The short name.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IUnit.BaseId">
            <summary>
            Gets the unit id of the base unit.
            </summary>
            <value>
            The base unit id.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IUnit.BaseConversionFactor">
            <summary>
            Gets the base conversion factor. The base conversion factor indicates
            how many units of this unit are in the base unit.
            </summary>
            <value>
            The base conversion factor.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.Unit">
            <summary>
            Represents a unit of measurement.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.Unit.Id">
            <summary>
            Gets the id of the unit.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.Unit.Category">
            <summary>
            Gets the category.
            </summary>
            <value>
            The category.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.Unit.LongName">
            <summary>
            Gets the long name.
            </summary>
            <value>
            The long name.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.Unit.ShortName">
            <summary>
            Gets the short name.
            </summary>
            <value>
            The short name.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.Unit.BaseId">
            <summary>
            Gets the unit id of the base unit.
            </summary>
            <value>
            The base unit id.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.Unit.BaseConversionFactor">
            <summary>
            Gets the base conversion factor. The base conversion factor indicates
            how many units of this unit are in the base unit.
            </summary>
            <value>
            The base conversion factor.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.IUnitCollection">
            <summary>
            A collection of units of measurement.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.IUnitCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.IUnitCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IUnitCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:MetaStock.DataAPI.IUnit"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:MetaStock.DataAPI.IUnit"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="T:MetaStock.DataAPI.UnitCollection">
            <summary>
            A collection of units of measurement.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.UnitCollection.#ctor(MetaStock.DataAPI.IUnit[])">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.UnitCollection"/> class.
            </summary>
            <param name="items">The items to put in the collection.</param>
        </member>
        <member name="T:MetaStock.DataAPI.IUnitDataLoadEventArgs">
            <summary>
            Provides data for the UnitsChanged event
            </summary>    
        </member>
        <member name="P:MetaStock.DataAPI.IUnitDataLoadEventArgs.Data">
            <summary>
            Gets the current unit collection.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.UnitDataLoadEventArgs">
            <summary>
            Provides data for the UnitsChanged event
            </summary>        
        </member>
        <member name="P:MetaStock.DataAPI.UnitDataLoadEventArgs.Data">
            <summary>
            Gets the current unit collection.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.IUnitConversion">
            <summary>
            Defines a unit conversion factor between two units.
            </summary>
            <remarks>
            If <see cref="P:MetaStock.DataAPI.IUnitConversion.FromUnitId"/> is days, and <see cref="P:MetaStock.DataAPI.IUnitConversion.ToUnitId"/> is hours, then <see cref="P:MetaStock.DataAPI.IUnitConversion.Factor"/> will be 24.
            </remarks>
        </member>
        <member name="P:MetaStock.DataAPI.IUnitConversion.FromUnitId">
            <summary>
            The unit id of the unit that when multiplied by <see cref="P:MetaStock.DataAPI.IUnitConversion.Factor"/> will yield the quantity 
            in <see cref="P:MetaStock.DataAPI.IUnitConversion.ToUnitId"/> units.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IUnitConversion.ToUnitId">
            <summary>
            The unit id of the unit that is converted to when <see cref="P:MetaStock.DataAPI.IUnitConversion.FromUnitId"/> units are multiplied by
            <see cref="P:MetaStock.DataAPI.IUnitConversion.Factor"/>.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IUnitConversion.Factor">
            <summary>
            The conversion factor.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.UnitConversion">
            <summary>
            Defines a unit conversion factor between two units.
            </summary>
            <remarks>
            If <see cref="P:MetaStock.DataAPI.UnitConversion.FromUnitId"/> is days, and <see cref="P:MetaStock.DataAPI.UnitConversion.ToUnitId"/> is hours, then <see cref="P:MetaStock.DataAPI.UnitConversion.Factor"/> will be 24.
            </remarks>
        </member>
        <member name="M:MetaStock.DataAPI.UnitConversion.#ctor(System.Int32,System.Int32,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaStock.DataAPI.UnitConversion"/> class.
            </summary>
            <param name="fromUnitId">From unit id.</param>
            <param name="toUnitId">To unit id.</param>
            <param name="factor">The factor.</param>
        </member>
        <member name="P:MetaStock.DataAPI.UnitConversion.FromUnitId">
            <summary>
            The unit id of the unit that when multiplied by <see cref="P:MetaStock.DataAPI.UnitConversion.Factor"/> will yield the quantity
            in <see cref="P:MetaStock.DataAPI.UnitConversion.ToUnitId"/> units.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.UnitConversion.ToUnitId">
            <summary>
            The unit id of the unit that is converted to when <see cref="P:MetaStock.DataAPI.UnitConversion.FromUnitId"/> units are multiplied by
            <see cref="P:MetaStock.DataAPI.UnitConversion.Factor"/>.
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.UnitConversion.Factor">
            <summary>
            The conversion factor.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.IUnitConversionCollection">
            <summary>
            Represents a collection of unit conversion cross factors for a symbol.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.IUnitConversionCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.IUnitConversionCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IUnitConversionCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:MetaStock.DataAPI.IUnitConversion"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:MetaStock.DataAPI.IUnitConversion"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="T:MetaStock.DataAPI.UnitConversionCollection">
            <summary>
            Represents a collection of unit conversion cross factors for a symbol.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.ValueType">
            <summary>
            Describes the type of data made available from a fact.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.ValueType.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.ValueType.Discount">
            <summary>
            Discount.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.ValueType.OpenInterest">
            <summary>
            Open interest.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.ValueType.Price">
            <summary>
            Price data.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.ValueType.Rate">
            <summary>
            Rate.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.ValueType.Turnover">
            <summary>
            Turnover.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.ValueType.Volume">
            <summary>
            Volume.
            </summary>
        </member>
        <member name="F:MetaStock.DataAPI.ValueType.Yield">
            <summary>
            Yield.
            </summary>
        </member>
        <member name="T:MetaStock.DataAPI.IView">
            <summary>
            Information describing a time series view
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.IView.Name">
            <summary>
            Gets the requestable view name.
            </summary>
            <value>
            The view name.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IView.LongDescription">
            <summary>
            Gets the long description.
            </summary>
            <value>
            The long description.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IView.ShortDescription">
            <summary>
            Gets the short description.
            </summary>
            <value>
            The short description.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IView.IsDefault">
            <summary>
            Gets a value indicating whether this instance is the default view.
            </summary>
            <value>
            <c>true</c> if this instance is the default view; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IView.IsDefaultPrice">
            <summary>
            Gets a value indicating whether this instance is the default price view.
            </summary>
            <value>
            <c>true</c> if this instance is the default price view; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IView.IsDefaultYield">
            <summary>
            Gets a value indicating whether this instance is the default yield view.
            </summary>
            <value>
            <c>true</c> if this instance is the default yield view; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IView.DisplayUnit">
            <summary>
            Gets the display unit for view data values.
            </summary>
            <value>
            The display unit.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IView.Intervals">
            <summary>
            Gets a collection of valid intervals for the view.
            </summary>
            <value>
            The intervals collection.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.View">
            <summary>
            Information describing a time series view
            </summary>
        </member>
        <member name="P:MetaStock.DataAPI.View.Name">
            <summary>
            Gets the requestable view name.
            </summary>
            <value>
            The view name.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.View.LongDescription">
            <summary>
            Gets the long description.
            </summary>
            <value>
            The long description.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.View.ShortDescription">
            <summary>
            Gets the short description.
            </summary>
            <value>
            The short description.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.View.Intervals">
            <summary>
            Gets a collection of valid intervals for the view.
            </summary>
            <value>
            The intervals collection.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.View.IsDefault">
            <summary>
            Gets a value indicating whether this instance is the default view.
            </summary>
            <value>
            <c>true</c> if this instance is the default view; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.View.IsDefaultPrice">
            <summary>
            Gets a value indicating whether this instance is the default price view.
            </summary>
            <value>
            <c>true</c> if this instance is the default price view; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.View.IsDefaultYield">
            <summary>
            Gets a value indicating whether this instance is the default yield view.
            </summary>
            <value>
            <c>true</c> if this instance is the default yield view; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.View.DisplayUnit">
            <summary>
            Gets the display unit for view data values.
            </summary>
            <value>
            The display unit.
            </value>
        </member>
        <member name="T:MetaStock.DataAPI.IViewCollection">
            <summary>
            A collection of <see cref="T:MetaStock.DataAPI.IView"/> objects.
            </summary>
        </member>
        <member name="M:MetaStock.DataAPI.IViewCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:MetaStock.DataAPI.IViewCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:MetaStock.DataAPI.IViewCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:MetaStock.DataAPI.IView"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:MetaStock.DataAPI.IView"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="T:MetaStock.DataAPI.ViewCollection">
            <summary>
            A collection of <see cref="T:MetaStock.DataAPI.IView"/> objects.
            </summary>
        </member>
    </members>
</doc>
